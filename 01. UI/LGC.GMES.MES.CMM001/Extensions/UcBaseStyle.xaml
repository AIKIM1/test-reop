<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework" 
                    xmlns:uc="clr-namespace:LGC.GMES.MES.CMM001.Controls"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type uc:UcBaseButton}" x:Key="UcBaseButtonStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UcBaseButton}">
                    <Grid MinWidth="{TemplateBinding MinWidth}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver"/>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused"/>
                                <vsm:VisualState x:Name="Unfocused"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>

                        <Border    x:Name="Border" Background="#FFC8294B"  BorderThickness="1" BorderBrush="#FFA6213E" Cursor="Hand">
                            <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="4"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>

                                <Image     Grid.Row="1" Grid.Column="1" x:Name="BorderImage" Width="14" Height="14" Stretch="Fill" Visibility="Collapsed"/>
                                <TextBlock Grid.Row="1" Grid.Column="3" x:Name="NormalTextBlock" Text="{TemplateBinding Content}" 
                                           TextWrapping="{TemplateBinding TextWrapping}" TextTrimming="{TemplateBinding TextTrimming}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                                           Height="Auto"/>

                            </Grid>
                        </Border>


                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF730E24" Offset="0"/>
                                    <GradientStop Color="#FF961833" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="4"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>

                                <Image     Grid.Row="1" Grid.Column="1" x:Name="PressedVisualElementImage" Width="14" Height="14" Stretch="Fill" Visibility="Collapsed"/>
                                <TextBlock Grid.Row="1" Grid.Column="3" x:Name="PressedTextBlock" Text="{TemplateBinding Content}"
                                           TextWrapping="{TemplateBinding TextWrapping}"  TextTrimming="{TemplateBinding TextTrimming}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                                           Height="Auto"/>
                            </Grid>
                        </Border>

                        <Border x:Name="DisabledVisualElement" Background="#FFE9E9E9" BorderThickness="1" BorderBrush="#FFD8D8D8" Visibility="Collapsed">
                            <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="4"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>

                                <Image     Grid.Row="1" Grid.Column="1" x:Name="DisabledVisualElementImage" Width="14" Height="14" Stretch="Fill" Visibility="Collapsed"/>
                                <TextBlock Grid.Row="1" Grid.Column="3" x:Name="DisabledTextBlock" Text="{TemplateBinding Content}"
                                           TextWrapping="{TemplateBinding TextWrapping}"  TextTrimming="{TemplateBinding TextTrimming}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"                                           
                                           Height="Auto"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style  TargetType="{x:Type uc:UcBaseTextBox}"  x:Key="UcBaseTextBoxStyle" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UcBaseTextBox}">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver"/>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="ReadOnly"/>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused"/>
                                <vsm:VisualState x:Name="Unfocused"/>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused"/>
                                <vsm:VisualState x:Name="InvalidFocused"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ValidationGrid" Grid.Column="0" Visibility="{TemplateBinding ValidationVisibility}">
                            <Image x:Name="ValidationIcon" Width="14" Height="14" Stretch="Fill" Margin="5,0,3,0" Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/icon_message.png"/>
                        </Grid>
                        <Grid x:Name="BodyGrid"  Grid.Column="1">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
                            </Border>
                            <Border x:Name="DisabledVisualElement" Background="#FFEBEBEB" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Visibility="Collapsed" IsHitTestVisible="False">
                                <TextBlock Text="{TemplateBinding Text}" Foreground="#FF8A8A8A" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type uc:UcBaseComboBox}" x:Key="UcBaseComboBoxStyle" BasedOn="{StaticResource C1ComboBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UcBaseComboBox}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ValidationGrid" Grid.Column="0" Visibility="{TemplateBinding ValidationVisibility}">
                            <Image x:Name="ValidationIcon" Width="14" Height="14" Stretch="Fill" Margin="5,0,3,0" Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/icon_message.png" />
                        </Grid>
                        <Grid x:Name="BodyGrid" Grid.Column="1">
                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                            <c1:C1DropDown x:Name="DropDown" AutoSizeMode="GrowAndShrink" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding ButtonBackground}" CornerRadius="{TemplateBinding CornerRadius}" DropDownWidth="{TemplateBinding DropDownWidth}" DisabledCuesVisibility="Visible" DropDownHeight="{TemplateBinding DropDownHeight}" DropDownDirection="{TemplateBinding DropDownDirection}" FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}" FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding ButtonForeground}" HeaderPadding="0" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" MouseOverBrush="{TemplateBinding MouseOverBrush}" MaxDropDownWidth="{TemplateBinding MaxDropDownWidth}" MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}" Padding="0" PressedBrush="{TemplateBinding PressedBrush}">
                                <c1:C1DropDown.Header>
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}">
                                            <Border.CornerRadius>
                                                <Binding ConverterParameter="topleft bottomleft" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <c1:C1SideRadiusConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Border.CornerRadius>
                                        </Border>
                                        <c1:C1TextEditableContentControl x:Name="ComboHeader" BorderThickness="0" 
                                                                             DisabledCuesVisibility="Collapsed" 
                                                                             Padding="9,0,0,0" 
                                                                             Foreground="{TemplateBinding Foreground}"
                                                                             SelectionForeground="{TemplateBinding SelectionForeground}" 
                                                                             SelectionBackground="{TemplateBinding SelectionBackground}" 
                                                                             FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                                                             IsTabStop="True" IsDirty="False" IsEnabled="{TemplateBinding IsEnabled}" 
                                                                             TextAlignment="{TemplateBinding TextAlignment}" 
                                                                             TabIndex="{TemplateBinding TabIndex}" 
                                                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="HeaderClickInterceptor" Fill="Transparent"/>
                                    </Grid>
                                </c1:C1DropDown.Header>
                                <ScrollViewer x:Name="ScrollViewer" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="Gainsboro"/>
                                            <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD"/>
                                            <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
                                            <Setter Property="Padding" Value="4"/>
                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2"/>
                                            <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black"/>
                                            <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                                <Setter.Value>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Background" Value="Gainsboro"/>
                                                        <Setter Property="BorderBrush" Value="#FF707070"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                        <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                                                        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                            <RowDefinition Height="1E-05*"/>
                                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                        </Grid.RowDefinitions>
                                                                        <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.Style>
                                                                                <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                    <Setter Property="DesignBrush">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                </Style>
                                                                            </c1:C1BrushBuilder.Style>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                                                        <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                        <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                                                        <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Grid x:Name="Root" Background="Transparent">
                                                                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                            <vsm:VisualState x:Name="Normal"/>
                                                                                                            <vsm:VisualState x:Name="MouseOver">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                            <vsm:VisualState x:Name="Pressed">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                            <vsm:VisualState x:Name="Disabled">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                        </vsm:VisualStateGroup>
                                                                                                    </vsm:VisualStateManager.VisualStateGroups>
                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                </Grid>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                            <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                        </RepeatButton>
                                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <Grid>
                                                                                                            <vsm:VisualStateManager.VisualStateGroups>
                                                                                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                                    <vsm:VisualState x:Name="Normal"/>
                                                                                                                    <vsm:VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                </vsm:VisualStateGroup>
                                                                                                            </vsm:VisualStateManager.VisualStateGroups>
                                                                                                            <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                            </Grid>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                        <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Grid x:Name="Root" Background="Transparent">
                                                                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                            <vsm:VisualState x:Name="Normal"/>
                                                                                                            <vsm:VisualState x:Name="MouseOver">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                            <vsm:VisualState x:Name="Pressed">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                            <vsm:VisualState x:Name="Disabled">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </vsm:VisualState>
                                                                                                        </vsm:VisualStateGroup>
                                                                                                    </vsm:VisualStateManager.VisualStateGroups>
                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                </Grid>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                            <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                        </RepeatButton>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Foreground" Value="Black"/>
                                                                <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                                <Setter Property="Width" Value="Auto"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                    <ColumnDefinition Width="1E-05*"/>
                                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                    <c1:C1BrushBuilder.Style>
                                                                                        <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                            <Setter Property="DesignBrush">
                                                                                                <Setter.Value>
                                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                        <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                        <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                        <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                        <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                                    </LinearGradientBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                        </Style>
                                                                                    </c1:C1BrushBuilder.Style>
                                                                                </c1:C1BrushBuilder>
                                                                                <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Grid x:Name="Root" Background="Transparent">
                                                                                                            <vsm:VisualStateManager.VisualStateGroups>
                                                                                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                                    <vsm:VisualState x:Name="Normal"/>
                                                                                                                    <vsm:VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                </vsm:VisualStateGroup>
                                                                                                            </vsm:VisualStateManager.VisualStateGroups>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                                </RepeatButton>
                                                                                <Track x:Name="PART_Track" Grid.Column="1">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <Grid>
                                                                                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                                                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                                            <vsm:VisualState x:Name="Normal"/>
                                                                                                                            <vsm:VisualState x:Name="MouseOver">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </vsm:VisualState>
                                                                                                                            <vsm:VisualState x:Name="Pressed">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </vsm:VisualState>
                                                                                                                            <vsm:VisualState x:Name="Disabled">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </vsm:VisualState>
                                                                                                                        </vsm:VisualStateGroup>
                                                                                                                    </vsm:VisualStateManager.VisualStateGroups>
                                                                                                                    <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                        <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                        <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                                    </Grid>
                                                                                                                </Grid>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Grid x:Name="Root" Background="Transparent">
                                                                                                            <vsm:VisualStateManager.VisualStateGroups>
                                                                                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                                    <vsm:VisualState x:Name="Normal"/>
                                                                                                                    <vsm:VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                    <vsm:VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </vsm:VisualState>
                                                                                                                </vsm:VisualStateGroup>
                                                                                                            </vsm:VisualStateManager.VisualStateGroups>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                                </RepeatButton>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Vertical" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                                </Grid>
                                                                <ScrollBar x:Name="PART_VerticalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="1" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=verticalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Vertical" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="0" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="0" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=horizontalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Horizontal" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="1" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>
                                    <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                        <c1:ScrollViewerTouchBehavior/>
                                    </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </c1:C1DropDown>
                            <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1ComboBoxItem}" x:Key="UcBaseCheckComboBoxItemStyle" >
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="9,0,9,0"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBoxItem}">
                    <Grid x:Name="Root">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Unfocused"/>
                                <vsm:VisualState x:Name="Focused"/>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FilterCondition">
                                <vsm:VisualState x:Name="UnselectPrevious"/>
                                <vsm:VisualState x:Name="SelectFirstOne">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FilterElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1FBFF" Offset="0"/>
                                    <GradientStop Color="#FFC5E3ED" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" IsHitTestVisible="False"/>
                        <Border x:Name="MouseOverElement" 
                                        BorderBrush="{TemplateBinding MouseOverBrush}" 
                                        BorderThickness="0" 
                                        Background="#FFDCE9EF" 
                                        CornerRadius="2" 
                                        IsHitTestVisible="False" 
                                        Visibility="Collapsed"/>
                        <Border x:Name="FilterElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="0" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <CheckBox x:Name="ContentCheckBox" Content="{TemplateBinding Content}" IsHitTestVisible="True" Margin="8,0,8,0" Style="{StaticResource SearchCondition_CheckBoxStyle}" />
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="2" IsHitTestVisible="False" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type uc:UcBaseNumericBox}" x:Key="UcBaseNumericBoxStyle" BasedOn="{StaticResource C1NumericBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UcBaseNumericBox}">
                    <Grid x:Name="Root">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Unfocused"/>
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ButtonsVisibilityStates">
                                <vsm:VisualState x:Name="HideButtons">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IncreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DecreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="ShowButtons">
                                    <Storyboard/>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition x:Name="ButtonsColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundElement"     Grid.ColumnSpan="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                            <Border x:Name="DisabledVisualElement" Grid.ColumnSpan="3" Background="#FFEBEBEB"                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="{TemplateBinding DisabledCuesVisibility}"/>
                            <c1:C1TextBoxBase x:Name="Text" BorderThickness="0" Background="Transparent" CaretBrush="{TemplateBinding CaretBrush}" DisabledCuesVisibility="Collapsed" FocusCuesVisibility="Collapsed" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}" IsEnabled="True" Padding="{TemplateBinding Padding}" SelectionForeground="{TemplateBinding SelectionForeground}" SelectionBackground="{TemplateBinding SelectionBackground}" TextAlignment="{TemplateBinding TextAlignment}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Watermark="{TemplateBinding Watermark}">
                                <c1:C1TextBoxBase.Margin>
                                    <Binding ConverterParameter="left-top-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </c1:C1TextBoxBase.Margin>
                            </c1:C1TextBoxBase>
                            <Grid Grid.Column="2">
                                <Grid.Margin>
                                    <Binding ConverterParameter="top-right-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Grid.Margin>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border x:Name="IncreaseBorder">
                                    <RepeatButton x:Name="Increase" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="topright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <vsm:VisualStateManager.VisualStateGroups>
                                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                                        <vsm:VisualState x:Name="Normal"/>
                                                                        <vsm:VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="CheckStates">
                                                                        <vsm:VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unchecked"/>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                                                        <vsm:VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unfocused"/>
                                                                    </vsm:VisualStateGroup>
                                                                </vsm:VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,1" Points="1,0 2,1 0,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                                <Border x:Name="DecreaseBorder" Margin="0,-1,0,0" Grid.Row="1">
                                    <RepeatButton x:Name="Decrease" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="bottomright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <vsm:VisualStateManager.VisualStateGroups>
                                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                                        <vsm:VisualState x:Name="Normal"/>
                                                                        <vsm:VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="CheckStates">
                                                                        <vsm:VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unchecked"/>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                                                        <vsm:VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unfocused"/>
                                                                    </vsm:VisualStateGroup>
                                                                </vsm:VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,0" Points="0,0 2,0 1,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                            </Grid>
                            <Border x:Name="FocusedVisualElement" BorderBrush="{TemplateBinding FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="{TemplateBinding FocusCuesVisibility}"/>
                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                        </Grid>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type c1:DataGridColumnHeaderPresenter}" x:Key="UcBaseDataGridColumnHeaderPresenterStyle" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:DataGridColumnHeaderPresenter}">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Editing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unselected">
                                    <Storyboard/>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="OptionsStates">
                                <vsm:VisualState x:Name="Filtering">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OptionsArrow">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Filter">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Undefined">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OptionsArrow">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Filter">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="MergingStates">
                                <vsm:VisualState x:Name="Merging">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="NotMerging"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="IconBrush" DesignBrush="#FF5E5E5E" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Foreground}" Visibility="Collapsed"/>
                        <c1:C1BrushBuilder x:Name="IconBorderBrush" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Foreground}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <GradientStop Color="#FF333333" Offset="0"/>
                                    <GradientStop Color="#FF222222" Offset="0.496"/>
                                    <GradientStop Color="#FF3B3B3B" Offset="0.5"/>
                                    <GradientStop Color="#FF3B3B3B" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5,0,0.5,1" Background="#FFEEEEEE" Grid.ColumnSpan="4" Grid.RowSpan="2"/>
                        <Border x:Name="SelectedElement" BorderBrush="#D8D8D8" BorderThickness="{TemplateBinding BorderThickness}" Background="#ffe9e9e9" Grid.ColumnSpan="4" Grid.RowSpan="2" Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFFEFEFE" Grid.ColumnSpan="4" Grid.RowSpan="2" Visibility="Collapsed"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="ContentPresenter" Grid.Column="0" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,0" Visibility="Visible" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton x:Name="Sort" Grid.Column="1" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="True" IsTabStop="False" Margin="0,0,6,0" Grid.RowSpan="2">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Padding" Value="3"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid>
                                                        <vsm:VisualStateManager.VisualStateGroups>
                                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                                <vsm:VisualState x:Name="Normal"/>
                                                                <vsm:VisualState x:Name="MouseOver"/>
                                                                <vsm:VisualState x:Name="Pressed"/>
                                                                <vsm:VisualState x:Name="Disabled"/>
                                                            </vsm:VisualStateGroup>
                                                            <vsm:VisualStateGroup x:Name="CheckStates">
                                                                <vsm:VisualState x:Name="Indeterminate"/>
                                                                <vsm:VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SortbyAscElement">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </vsm:VisualState>
                                                                <vsm:VisualState x:Name="Unchecked">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SortbyDescElement">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </vsm:VisualState>
                                                            </vsm:VisualStateGroup>
                                                            <vsm:VisualStateGroup x:Name="FocusStates">
                                                                <vsm:VisualState x:Name="Focused"/>
                                                                <vsm:VisualState x:Name="Unfocused"/>
                                                            </vsm:VisualStateGroup>
                                                        </vsm:VisualStateManager.VisualStateGroups>
                                                        <Image x:Name="SortbyAscElement" Width="7" Height="5" Stretch="Fill" Visibility="Collapsed" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/table_sort_asc.png"/>
                                                        <Image x:Name="SortbyDescElement" Width="7" Height="5" Stretch="Fill" Visibility="Collapsed" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/table_sort_desc.png"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>
                        <c1:C1DropDown x:Name="Options" AutoSizeMode="GrowHorizontally" BorderBrush="{TemplateBinding BorderBrush}" Background="#ffe9e9e9" HorizontalAlignment="Right" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" PressedBrush="#ffe9e9e9" Visibility="Collapsed">
                            <c1:C1DropDown.Header>
                                <Grid>
                                    <Path x:Name="Filter" Data="M3.5,0.5L4.5,0.5 4.5,0.5 7.5,0.5 7.5,1.5 7.5,1.5 4.5,4.3 4.5,7.5 3.5,7.5 3.5,4.3 0.5,1.5 0.5,0.5 3.5,0.5z" Fill="{Binding Output, ElementName=IconBrush}" Stroke="{Binding Output, ElementName=IconBorderBrush}">
                                        <Path.Style>
                                            <Style TargetType="{x:Type Path}">
                                                <Setter Property="Stretch" Value="None"/>
                                                <Setter Property="Height" Value="8"/>
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="StrokeThickness" Value="1"/>
                                                <Setter Property="Opacity" Value="0.6"/>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                    <Polygon x:Name="OptionsArrow" Fill="{Binding Output, ElementName=IconBrush}" Points="0,0 2,0 1,1" Stretch="Uniform" Stroke="{Binding Output, ElementName=IconBorderBrush}">
                                        <Polygon.Style>
                                            <Style TargetType="{x:Type Polygon}">
                                                <Setter Property="Width" Value="7"/>
                                                <Setter Property="StrokeThickness" Value="1"/>
                                                <Setter Property="Opacity" Value="0.6"/>
                                            </Style>
                                        </Polygon.Style>
                                    </Polygon>
                                </Grid>
                            </c1:C1DropDown.Header>
                            <c1:C1DropDown.Template>
                                <ControlTemplate TargetType="{x:Type c1:C1DropDown}">
                                    <Grid>
                                        <vsm:VisualStateManager.VisualStateGroups>
                                            <vsm:VisualStateGroup x:Name="DropDownOpenStates">
                                                <vsm:VisualState x:Name="Closed">
                                                    <Storyboard/>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Opened"/>
                                            </vsm:VisualStateGroup>
                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                <vsm:VisualState x:Name="Normal"/>
                                                <vsm:VisualState x:Name="Disabled"/>
                                                <vsm:VisualState x:Name="MouseOver"/>
                                            </vsm:VisualStateGroup>
                                            <vsm:VisualStateGroup x:Name="FocusStates">
                                                <vsm:VisualState x:Name="Unfocused"/>
                                                <vsm:VisualState x:Name="Focused">
                                                    <Storyboard/>
                                                </vsm:VisualState>
                                            </vsm:VisualStateGroup>
                                        </vsm:VisualStateManager.VisualStateGroups>
                                        <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Content="{TemplateBinding Header}" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="14">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                                            <vsm:VisualState x:Name="Normal"/>
                                                                            <vsm:VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </vsm:VisualState>
                                                                            <vsm:VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </vsm:VisualState>
                                                                            <vsm:VisualState x:Name="Disabled"/>
                                                                        </vsm:VisualStateGroup>
                                                                        <vsm:VisualStateGroup x:Name="CheckStates">
                                                                            <vsm:VisualState x:Name="Unchecked"/>
                                                                        </vsm:VisualStateGroup>
                                                                        <vsm:VisualStateGroup x:Name="FocusStates">
                                                                            <vsm:VisualState x:Name="Focused"/>
                                                                            <vsm:VisualState x:Name="Unfocused"/>
                                                                        </vsm:VisualStateGroup>
                                                                    </vsm:VisualStateManager.VisualStateGroups>
                                                                    <Border Background="{TemplateBinding Background}"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding Background}"/>
                                                                    <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" IsHitTestVisible="True" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Popup x:Name="DropDownPopup" VerticalAlignment="Bottom">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </c1:C1DropDown.Template>
                        </c1:C1DropDown>
                        <Rectangle x:Name="Resize" Cursor="SizeWE" Grid.ColumnSpan="3" Fill="White" HorizontalAlignment="Right" Margin="0,0,-2,0" Opacity="0" Grid.RowSpan="2" Visibility="Visible" Width="4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:DataGridCellPresenter}" x:Key="UcBaseDataGridCellHeaderPresenterStyle" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:DataGridCellPresenter}">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Editing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unselected">
                                    <Storyboard/>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="OptionsStates">
                                <vsm:VisualState x:Name="Filtering">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OptionsArrow">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Filter">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Undefined">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OptionsArrow">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Filter">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <!--<vsm:VisualStateGroup x:Name="MergingStates">
                                <vsm:VisualState x:Name="Merging">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="NotMerging"/>
                            </vsm:VisualStateGroup>-->
                        </vsm:VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="IconBrush" DesignBrush="#FF5E5E5E" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Foreground}" Visibility="Collapsed"/>
                        <c1:C1BrushBuilder x:Name="IconBorderBrush" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Foreground}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <GradientStop Color="#FF333333" Offset="0"/>
                                    <GradientStop Color="#FF222222" Offset="0.496"/>
                                    <GradientStop Color="#FF3B3B3B" Offset="0.5"/>
                                    <GradientStop Color="#FF3B3B3B" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="BackgroundElement" BorderBrush="#FFC3C3C3" BorderThickness="0.5,0,0.5,1" Background="#FFEEEEEE" Grid.ColumnSpan="4" Grid.RowSpan="2"/>
                        <Border x:Name="SelectedElement" BorderBrush="#D8D8D8" BorderThickness="{TemplateBinding BorderThickness}" Background="#ffe9e9e9" Grid.ColumnSpan="4" Grid.RowSpan="2" Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFE4E4E4" Grid.ColumnSpan="4" Grid.RowSpan="2" Visibility="Collapsed"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="ContentPresenter" Grid.Column="0" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,0" Visibility="Visible" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <Rectangle x:Name="Resize" Cursor="SizeWE" Grid.ColumnSpan="3" Fill="White" HorizontalAlignment="Right" Margin="0,0,-2,0" Opacity="0" Grid.RowSpan="2" Visibility="Visible" Width="4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:DataGridCellPresenter}" x:Key="UcBaseDataGridCellPresenterStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="BorderBrush" Value="#ffd8d8d8" />
        <Setter Property="BorderThickness" Value="0.5,0,0.5,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:DataGridCellPresenter}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Unselected"/>
                                <vsm:VisualState x:Name="Editing"/>
                                <vsm:VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="CurrentSelected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CurrentSelectedElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid"/>
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Validation">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ValidationGrid" Grid.Row="0" Grid.Column="0" Background="{TemplateBinding Background}" Visibility="Collapsed">
                            <Image x:Name="ValidationIcon" Width="14" Height="14" Stretch="Fill" Margin="3,0,3,0" Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/icon_message.png" />
                        </Grid>
                        <Grid x:Name="CellBackgroundGrid" Grid.Row="0" Grid.Column="1" Background="{TemplateBinding Background}">
                            <Border x:Name="SelectedElement" Background="{TemplateBinding SelectedBackground}" Opacity="0"/>
                            <Border x:Name="CurrentSelectedElement" Background="{TemplateBinding SelectedBackground}" Opacity="0"/>
                            <c1:DataGridFocusPresenter x:Name="FocusElement" BorderBrush="{TemplateBinding SelectedBackground}" IsTabStop="False" Opacity="0" Style="{TemplateBinding FocusStyle}"/>
                            <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding SelectedBackground}" Background="{TemplateBinding MouseOverBrush}" Opacity="0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            <Border x:Name="Validation" BorderBrush="{TemplateBinding ValidationBackground}" BorderThickness="1" Opacity="0"/>
                        </Grid>
                        <Line x:Name="LeftBorderLine"   Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" />
                        <Line x:Name="TopBorderLine"    Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" />
                        <Line x:Name="RightBorderLine"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" />
                        <Line x:Name="BottomBorderLine" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1:DataGridGroupRowPresenter" x:Key="UcBaseDataGridGroupRowPresenterStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:DataGridGroupRowPresenter}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unselected"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid >
                            <Border x:Name="BackgroundElement" Background="White" Margin="0,0,0,0"/>
                            <Border x:Name="UserBackground" Background="#FFF7E9D5" Margin="0,0,0,0"/>
                            <Border x:Name="SelectedElement" Background="#fffff1f1" Margin="0,0,0,0" Visibility="Collapsed"/>
                            <Border x:Name="MouseOverElement" Background="{TemplateBinding MouseOverBrush}" Margin="0,0,0,0" Visibility="Collapsed"/>
                            <Grid Margin="{TemplateBinding RowAreaMargin}">
                                <Grid HorizontalAlignment="Left" Margin="{TemplateBinding GroupContentMargin}" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <c1:DataGridToggleGroupButton x:Name="ToggleGroup" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding ButtonForeground}" Height="8" IsTabStop="False" Width="7" Visibility="Collapsed">
                                        <c1:DataGridToggleGroupButton.Style>
                                            <Style TargetType="{x:Type c1:DataGridToggleGroupButton}">
                                                <Setter Property="Margin" Value="6,0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type c1:DataGridToggleGroupButton}">
                                                            <Grid>
                                                                <vsm:VisualStateManager.VisualStateGroups>
                                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                                        <vsm:VisualState x:Name="Normal"/>
                                                                        <vsm:VisualState x:Name="MouseOver"/>
                                                                        <vsm:VisualState x:Name="Pressed"/>
                                                                        <vsm:VisualState x:Name="Disabled"/>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="CheckStates">
                                                                        <vsm:VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgChecked">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unchecked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgUnchecked">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                                                        <vsm:VisualState x:Name="Focused"/>
                                                                        <vsm:VisualState x:Name="Unfocused"/>
                                                                    </vsm:VisualStateGroup>
                                                                </vsm:VisualStateManager.VisualStateGroups>
                                                                <Grid>
                                                                    <Image x:Name="imgChecked" Width="12" Height="12" Stretch="Uniform"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/table_sort_asc.png" Visibility="Collapsed" />
                                                                    <Image x:Name="imgUnchecked" Width="12" Height="12" Stretch="Uniform"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/table_sort_desc.png" Visibility="Collapsed" />
                                                                </Grid>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </c1:DataGridToggleGroupButton.Style>
                                    </c1:DataGridToggleGroupButton>
                                    <ContentPresenter x:Name="GroupName" Grid.Column="1" Visibility="Collapsed"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <c1:DataGridCellsPanel x:Name="Cells" Margin="{TemplateBinding CellsAreaMargin}"/>
                        <Rectangle x:Name="HorizontalGridLine" Fill="#ffd8d8d8" Height="1" Grid.Row="1" Visibility="Visible"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="UcBaseChartTooltipTemplate">
        <Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold" Text="{Binding Series}" HorizontalAlignment="Left"/>
                <TextBlock Grid.Row="1" Grid.Column="1" FontWeight="Bold" Text="{Binding Name}" HorizontalAlignment="Left"/>
                <TextBlock Grid.Row="2" Grid.Column="1" FontWeight="Bold" Text="{Binding Value}" HorizontalAlignment="Left" />
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>