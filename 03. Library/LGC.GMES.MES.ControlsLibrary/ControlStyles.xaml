<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrlLib="clr-namespace:LGC.GMES.MES.ControlsLibrary"
                    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework" 
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/LGC.GMES.MES.ControlsLibrary;Component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ctrlLib:ObjectDicConverter x:Key="GlobalObjectDicConverter" />
    <ctrlLib:BoolToVisibilityConverter x:Key="GlobalBoolToVisibilityConverter" />
    <ctrlLib:ButtonToVisibilityConverter x:Key="GlobalButtonToVisibilityConverter" />
    <ctrlLib:ConverterButtonForeColor x:Key="GlobalButtonToForeColorConverter" />
    <ctrlLib:ConverterButtonBackColor x:Key="GlobalButtonToBackColorConverter" />
    <ctrlLib:ReverseBoolToVisibilityConverter x:Key="GlobalReverseBoolToVisibilityConverter" />
    <ctrlLib:TreeLineVisibilityConverter x:Key="TreeLineVisibilityConverter"/>
    <ctrlLib:TreeLineCheckLastItemConverter x:Key="TreeLineCheckLastItemConverter"/>
    <ctrlLib:NumericBoxConverter x:Key="NumericBoxConverter"/>
    <ctrlLib:TextToLabelConverter x:Key="TextToLabelConverter"/>

    <Style TargetType="{x:Type c1:C1Window}" x:Key="C1WindowStyle">
        <Setter Property="BorderBrush" Value="#FF828282"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HeaderBackground" Value="White"/>
        <Setter Property="ButtonBackground" Value="Transparent"/>
        <Setter Property="MouseOverBrush" Value="Transparent"/>
        <Setter Property="PressedBrush" Value="Transparent"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="ModalBackground" Value="#28000000"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ButtonForeground" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HeaderForeground" Value="#FF333333"/>
        <Setter Property="HeaderFontWeight" Value="SemiBold" />
        <Setter Property="HeaderFontSize" Value="16" />
        <Setter Property="HorizontalHeaderAlignment" Value="Left"/>
        <Setter Property="VerticalHeaderAlignment" Value="Center"/>
        <Setter Property="Padding" Value="27,20,27,24"/>
        <Setter Property="HeaderPadding" Value="27,0,0,0"/>
        <Setter Property="ShowMaximizeButton" Value="False" />
        <Setter Property="ShowMinimizeButton" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1Window}">
                    <Grid x:Name="Root" MinWidth="70" MinHeight="58">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InactiveShade">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WindowStateStates">
                                <VisualState x:Name="Minimized">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderMinimized">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MaximizeGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MinRestoreGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="InactiveShade">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>1</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MinimGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Maximized">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RestoreGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MaximizeGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Floating">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MaximizeGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OpenStates">
                                <VisualState x:Name="Open"/>
                                <VisualState x:Name="Closed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="59" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="HeaderBackground" Background="{TemplateBinding HeaderBackground}" Margin="2,2,2,1" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Border x:Name="HeaderMinimized" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding HeaderBackground}" CornerRadius="0" Visibility="Collapsed"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="Drag" Grid.ColumnSpan="2">
                                    <Border Background="Transparent"/>
                                    <ContentControl Foreground="{TemplateBinding HeaderForeground}" FontWeight="{TemplateBinding HeaderFontWeight}" FontStyle="{TemplateBinding HeaderFontStyle}" FontStretch="{TemplateBinding HeaderFontStretch}" FontSize="{TemplateBinding HeaderFontSize}" FontFamily="{TemplateBinding HeaderFontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsTabStop="False" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
                                        <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" Margin="{TemplateBinding HeaderPadding}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"/>
                                    </ContentControl>
                                </Grid>
                                <StackPanel x:Name="Buttons" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,21,0">
                                    <Button x:Name="Minimize" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding ButtonBackground}" Height="18" IsTabStop="False" Margin="0,0,1,0" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="24">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Unfocused"/>
                                                                        <VisualState x:Name="Focused"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Normal"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFFAFBFC"/>
                                                                            <GradientStop Color="#FFFAFBFC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD1DCE8" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA4B9D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFDCEEF3"/>
                                                                            <GradientStop Color="#FFDCEEF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBFE1EA" Offset="0.5"/>
                                                                            <GradientStop Color="#FF98CFDE" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFD5EDF3"/>
                                                                            <GradientStop Color="#FFB8E1EB" Offset="0.5"/>
                                                                            <GradientStop Color="#FF8ED1E2" Offset="0.5"/>
                                                                            <GradientStop Color="#FF7CC2D4" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="1">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <Border x:Name="MouseOverElement" BorderThickness="1" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="1" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="1" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="1" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="2"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="1" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <Grid>
                                            <Border x:Name="MinimGlyph" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,0,2" VerticalAlignment="Bottom" Width="12"/>
                                            <Grid x:Name="MinRestoreGlyph" Height="12" Visibility="Collapsed" Width="12">
                                                <Path Data="M3.5,3.5L3.5,6.5 6.5,6.5 6.5,3.5z M0.9,0.5L9,0.5C9,0.5,9.5,0.7,9.5,1L9.5,9C9.5,9.3,9.3,9.5,9,9.5L0.9,9.5C0.68,9.5,0.5,9.3,0.5,9L0.5,1C0.5,0.7,0.7,0.5,0.9,0.5z" Fill="{TemplateBinding ButtonForeground}" Margin="0,2,2,0" Stretch="None" Stroke="{TemplateBinding BorderBrush}"/>
                                                <Path Data="M0.9,0.5L9,0.5C9.3,0.5,9.5,0.72,9.5,1L9.5,9C9.5,9.2,9.3,9.5,9,9.5L7.5,9.5 7.5,3C7.5,2.7,7.3,2.5,7.09,2.5L0.5,2.5 0.5,1C0.5,0.72,0.68,0.5,0.9,0.5z" Fill="{TemplateBinding ButtonForeground}" HorizontalAlignment="Right" Height="10" Stretch="None" Stroke="{TemplateBinding BorderBrush}" VerticalAlignment="Top" Width="10"/>
                                            </Grid>
                                        </Grid>
                                    </Button>
                                    <Button x:Name="Maximize" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding ButtonBackground}" Height="18" IsTabStop="False" Margin="0,0,1,0" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="24">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Unfocused"/>
                                                                        <VisualState x:Name="Focused"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Normal"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFFAFBFC"/>
                                                                            <GradientStop Color="#FFFAFBFC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD1DCE8" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA4B9D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFDCEEF3"/>
                                                                            <GradientStop Color="#FFDCEEF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBFE1EA" Offset="0.5"/>
                                                                            <GradientStop Color="#FF98CFDE" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0,1">
                                                                            <GradientStop Color="#FFD5EDF3"/>
                                                                            <GradientStop Color="#FFB8E1EB" Offset="0.5"/>
                                                                            <GradientStop Color="#FF8ED1E2" Offset="0.5"/>
                                                                            <GradientStop Color="#FF7CC2D4" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="1">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <Border x:Name="MouseOverElement" BorderThickness="1" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="1" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="1" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="1" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="1"/>
                                                                </Border>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="2"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="1" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path x:Name="MaximizeGlyph" Data="M3.4,3.6L3.4,6.4 8.6,6.4 8.6,3.6 3.4,3.6z M1,0.5L11,0.5C11.27,0.5,11.5,0.72,11.5,1L11.5,9C11.5,9.27,11.27,9.5,11,9.5L1,9.5C0.72,9.5,0.5,9.27,0.5,9L0.5,1C0.5,0.72385764,0.72385764,0.5,1,0.5z" Fill="{TemplateBinding ButtonForeground}" Height="10" Stretch="None" Stroke="{TemplateBinding BorderBrush}" Width="12"/>
                                            <Grid x:Name="RestoreGlyph" Height="12" Visibility="Collapsed" Width="12">
                                                <Path Data="M3.5,3.5L3.5,6.5 6.5,6.5 6.5,3.5z M0.89999998,0.5L9,0.5C9,0.5,9.5,0.69999999,9.5,1L9.5,9C9.5,9.3000002,9.3000002,9.5,9,9.5L0.89999998,9.5C0.68000001,9.5,0.5,9.3000002,0.5,9L0.5,1C0.5,0.69999999,0.69999999,0.5,0.89999998,0.5z" Fill="{TemplateBinding ButtonForeground}" Height="10" Margin="0,2,2,0" Stroke="{TemplateBinding BorderBrush}" Width="10"/>
                                                <Path Data="M0.89999998,0.5L9,0.5C9.3000002,0.5,9.5,0.72000003,9.5,1L9.5,9C9.5,9.1999998,9.3000002,9.5,9,9.5L7.5,9.5 7.5,3C7.5,2.7,7.3000002,2.5,7.0900002,2.5L0.5,2.5 0.5,1C0.5,0.72000003,0.68000001,0.5,0.89999998,0.5z" Fill="{TemplateBinding ButtonForeground}" HorizontalAlignment="Right" Height="10" Stroke="{TemplateBinding BorderBrush}" VerticalAlignment="Top" Width="10"/>
                                            </Grid>
                                        </Grid>
                                    </Button>
                                    <Button x:Name="Close" BorderBrush="Transparent" Background="{TemplateBinding ButtonBackground}" Height="32" Width="32" IsTabStop="False">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Unfocused"/>
                                                                        <VisualState x:Name="Focused"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="MouseOver"/>
                                                                        <VisualState x:Name="Pressed"/>
                                                                        <VisualState x:Name="Disabled"/>
                                                                        <VisualState x:Name="Normal"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <Border BorderBrush="#FFAAAAAA" BorderThickness="1" Width="26" Height="26"  Padding="0" >
                                            <Image Stretch="Fill" Width="22" Height="22" Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/title_btn_i_close.png"  />
                                        </Border>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Border x:Name="InactiveShade" Background="#77E8E8E8" CornerRadius="3" IsHitTestVisible="False" Grid.RowSpan="2" Visibility="Collapsed"/>
                            <Grid x:Name="ContentGrid" Grid.Row="1" Panel.ZIndex="-1">
                                <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <Border x:Name="Resize" BorderBrush="Transparent" BorderThickness="7" Grid.RowSpan="2"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBlock Style-->

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_ModuleTitleStyle" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_InputForm_LabelStyle">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_Search_LabelStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_Search_Number_LabelStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_InputForm_TextBlockStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SearchCondition_MandatoryMarkStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#ffe63c6b" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Text" Value="* " />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SearchCondition_LabelStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#ff4d4c4c" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_InputForm_LabelStyle_PDA">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CellTray_LabelStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="Foreground" Value="#ff4d4c4c" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Grid_CellContentStyle">
        <Setter Property="Height" Value="21"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}},Path=ActualWidth}"/>
        <Setter Property="Padding" Value="0,0,30,0"/>
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/sel_img_part_03.png" AlignmentX="Right" AlignmentY="Center"  Stretch="Uniform" />
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Height" Value="21"/>
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/sel_img_part_03.png" AlignmentX="Right" AlignmentY="Center"  Stretch="Uniform" />
            </Setter.Value>
        </Setter>-->
    </Style>

    <!--
    <Style TargetType="{x:Type TextBlock}" x:Key="Content_ModuleDescriptionStyle" >
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Content_ModuleInstructionStyle" >
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    -->

    <!--Border Style-->

    <Style TargetType="{x:Type Border}" x:Key="Content_InputForm_LabelBorderStyle">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#ffd8d8d8" />
        <Setter Property="Background" Value="#FFF9F9F9" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Content_InputForm_ContentBorderStyle">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#ffd8d8d8" />
        <Setter Property="Background" Value="White" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Content_InputForm_GroupBorderStyle">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="#FFE8EBED"/>
        <Setter Property="BorderBrush" Value="#FF8A8A8A"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Content_InputForm_TitleBorderStyle">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#DCE0EC" />
        <Setter Property="Background" Value="#D6DBE9" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Content_Separator_BorderStyle">
        <Setter Property="Margin" Value="3,0" />
        <Setter Property="Height" Value="23" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Background" Value="#ffd8d8d8" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Condition_BorderStyle">
        <Setter Property="Background" Value="#FFEFF1F3" />
        <Setter Property="BorderBrush" Value="#FF9F9F9F" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Condition_Header_BorderStyle">
        <Setter Property="BorderBrush" Value="#FFC8294B" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
    </Style>

    <!--Rectangle Style-->

    <Style TargetType="{x:Type Rectangle}" x:Key="Content_MainButtonDividerStyle">
        <Setter Property="Fill" Value="#ff666666" />
        <Setter Property="Height" Value="1" />
    </Style>

    <!--Image Style-->

    <Style TargetType="{x:Type Image}" x:Key="Content_ModuleMessageIconStyle">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Source" Value="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/icon_message.png" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>

    <!--TextBox Style-->

    <Style  TargetType="{x:Type TextBox}"  x:Key="TextBoxBaseStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="Margin" Value="3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"
								BorderThickness="0"
								IsTabStop="False"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFEBEBEB"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Visibility="Collapsed"
							IsHitTestVisible="False">
                            <TextBlock Text="{TemplateBinding Text}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                            <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type TextBox}"  x:Key="TextBoxThickStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="Margin" Value="3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"
								BorderThickness="0"
								IsTabStop="False"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFEBEBEB"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Visibility="Collapsed"
							IsHitTestVisible="False">
                            <TextBlock Text="{TemplateBinding Text}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                            <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseStyle}" />

    <Style TargetType="{x:Type TextBox}" x:Key="SearchCondition_TextBoxStyle" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Padding" Value="7,0,0,0"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="Content_InputForm_TextBoxStyle" BasedOn="{StaticResource TextBoxBaseStyle}" />

    <Style TargetType="{x:Type TextBox}" x:Key="Content_InputForm_ReadOnlyTextBoxStyle" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="Content_InputForm_ThickTextBoxStyle" BasedOn="{StaticResource TextBoxThickStyle}">
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>

    <Style  TargetType="{x:Type TextBox}"  x:Key="TextBoxBaseStyle_PDA">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"
								BorderThickness="0"
								IsTabStop="False"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFEBEBEB"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Visibility="Collapsed"
							IsHitTestVisible="False">
                            <TextBlock Text="{TemplateBinding Text}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                            <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="Content_InputForm_MandatoryTextBoxStyle" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Background" Value="#FFFFFFE0"/>
    </Style>

    <!--ComboBox Style-->
    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxBaseStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Margin" Value="3,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="Opacity" To=".6" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFEBEBEB"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable"/>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="16"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="ContentPresenterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}"
								IsHitTestVisible="False" Margin="0,0,-1,0">
                                <ContentPresenter x:Name="ContentSite" 
									IsHitTestVisible="False"
									Content="{TemplateBinding SelectionBoxItem}"
									ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
									ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									Margin="{TemplateBinding Padding}" 
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ToggleButton Grid.ColumnSpan="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid Background="#01ffffff">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Pressed" />
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownOpenImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownCloseImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownOpenDisabledImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownCloseImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownOpenImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked" />
                                                    <VisualState x:Name="Indeterminate" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Image x:Name="DropDownOpenImage" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_dropdown_open.png" Width="16" Stretch="Fill"/>
                                            <Image x:Name="DropDownCloseImage" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_dropdown_close.png" Width="16" Stretch="Fill"/>
                                            <Image x:Name="DropDownOpenDisabledImage" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_dropdown_open_disabled.png" Width="16" Stretch="Fill"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </Grid>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" Width="Auto"  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                                <ScrollViewer BorderThickness="0" Padding="{TemplateBinding BorderThickness}" >
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Padding" Value="9,0,0,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Height" Value="29"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Grid Background="{TemplateBinding Background}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
														To="Transparent" Duration="0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
														To="#FFFFF1F1" Duration="0"/>
                                                    <DoubleAnimationUsingKeyFrames
														Duration="0" Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisualElement"
														Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="fillColor" Fill="#FFFFF1F1" IsHitTestVisible="False" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="SelectedVisualElement" Fill="#FFFFF1F1" Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}"/>

    <Style TargetType="{x:Type ComboBox}" x:Key="SearchCondition_ComboBoxStyle" BasedOn="{StaticResource ComboBoxBaseStyle}">
        <Setter Property="Padding" Value="7,0,0,0"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Padding" Value="7,0,0,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Height" Value="29"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Grid Background="{TemplateBinding Background}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
														To="Transparent" Duration="0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
														To="#FFFFF1F1" Duration="0"/>
                                                    <DoubleAnimationUsingKeyFrames
														Duration="0" Storyboard.TargetName="fillColor"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisualElement"
														Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement"
														Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="fillColor" Fill="#FFFFF1F1" IsHitTestVisible="False" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="FocusedVisualElement" Fill="#FFDCE9EF" Visibility="Collapsed"/>
                                    <Rectangle x:Name="SelectedVisualElement" Fill="#FFFFD0DA" Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="Content_InputForm_ComboBoxStyle" BasedOn="{StaticResource ComboBoxBaseStyle}"/>

    <!--C1ComboBox Style-->

    <Style x:Key="C1ComboBoxStyle" TargetType="{x:Type c1:C1ComboBox}">
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="ButtonBackground" Value="Gainsboro"/>
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="FocusBrush" Value="#FFC3C3C3"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="SelectionBackground" Value="#FFFFFFFF"/>
        <Setter Property="SelectionForeground" Value="#FF4D4C4C"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="ButtonForeground" Value="#FF4D4C4C"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Margin" Value="3,3"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="Gainsboro"/>
                    <Setter Property="BorderBrush" Value="#FF707070"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="1E-05*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                        <c1:C1BrushBuilder.Style>
                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                <Setter Property="DesignBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                            <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                            </Style>
                                        </c1:C1BrushBuilder.Style>
                                    </c1:C1BrushBuilder>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition Width="1E-05*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.Style>
                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                        <Setter Property="DesignBrush">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                    <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                    </Style>
                                                </c1:C1BrushBuilder.Style>
                                            </c1:C1BrushBuilder>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBox}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                        <c1:C1DropDown x:Name="DropDown" AutoSizeMode="GrowAndShrink" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding ButtonBackground}" CornerRadius="{TemplateBinding CornerRadius}" DropDownWidth="{TemplateBinding DropDownWidth}" DisabledCuesVisibility="Visible" DropDownHeight="{TemplateBinding DropDownHeight}" DropDownDirection="{TemplateBinding DropDownDirection}" FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}" FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding ButtonForeground}" HeaderPadding="0" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" MouseOverBrush="{TemplateBinding MouseOverBrush}" MaxDropDownWidth="{TemplateBinding MaxDropDownWidth}" MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}" Padding="0" PressedBrush="{TemplateBinding PressedBrush}">
                            <c1:C1DropDown.Header>
                                <Grid>
                                    <Border Background="{TemplateBinding Background}">
                                        <Border.CornerRadius>
                                            <Binding ConverterParameter="topleft bottomleft" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.CornerRadius>
                                    </Border>
                                    <c1:C1TextEditableContentControl x:Name="ComboHeader" BorderThickness="0" 
                                                                             DisabledCuesVisibility="Collapsed" 
                                                                             Padding="9,0,0,0" 
                                                                             Foreground="{TemplateBinding Foreground}"
                                                                             SelectionForeground="{TemplateBinding SelectionForeground}" 
                                                                             SelectionBackground="{TemplateBinding SelectionBackground}" 
                                                                             FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                                                             IsTabStop="True" IsDirty="False" IsEnabled="{TemplateBinding IsEnabled}" 
                                                                             TextAlignment="{TemplateBinding TextAlignment}" 
                                                                             TabIndex="{TemplateBinding TabIndex}" 
                                                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="HeaderClickInterceptor" Fill="Transparent"/>
                                </Grid>
                            </c1:C1DropDown.Header>
                            <ScrollViewer x:Name="ScrollViewer" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="Gainsboro"/>
                                        <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD"/>
                                        <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
                                        <Setter Property="Padding" Value="4"/>
                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2"/>
                                        <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black"/>
                                        <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Background" Value="Gainsboro"/>
                                                    <Setter Property="BorderBrush" Value="#FF707070"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                                                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                        <RowDefinition Height="1E-05*"/>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                    </Grid.RowDefinitions>
                                                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.Style>
                                                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                <Setter Property="DesignBrush">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                            <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                            <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                            <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                            </Style>
                                                                        </c1:C1BrushBuilder.Style>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <Grid>
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="Orientation" Value="Horizontal">
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                            <Setter Property="Width" Value="Auto"/>
                                                            <Setter Property="MinWidth" Value="0"/>
                                                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                <ColumnDefinition Width="1E-05*"/>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.Style>
                                                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                        <Setter Property="DesignBrush">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                    <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                    <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                    <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                    </Style>
                                                                                </c1:C1BrushBuilder.Style>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <Grid>
                                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Pressed">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Disabled">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                    </VisualStateGroup>
                                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                                </Grid>
                                                                                                            </Grid>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Vertical" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                            </Grid>
                                                            <ScrollBar x:Name="PART_VerticalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="1" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=verticalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Vertical" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="0" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="0" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=horizontalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Horizontal" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="1" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <c1:ScrollViewerTouchBehavior/>
                                </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </c1:C1DropDown>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1ComboBox}" BasedOn="{StaticResource C1ComboBoxStyle}"/>

    <Style TargetType="{x:Type c1:C1ComboBoxItem}" x:Key="C1ComboBoxItemStyle" >
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="9,0,9,0"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBoxItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterCondition">
                                <VisualState x:Name="UnselectPrevious"/>
                                <VisualState x:Name="SelectFirstOne">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FilterElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="SelectedBackground" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding SelectedBackground}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDEF3FA" Offset="0"/>
                                    <GradientStop Color="#FFA8D4E3" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1FBFF" Offset="0"/>
                                    <GradientStop Color="#FFC5E3ED" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}"/>
                        <Border x:Name="SelectedElement" 
                                        BorderBrush="{TemplateBinding SelectedBackground}" 
                                        BorderThickness="0" 
                                        Background="#FFFFD0DA" 
                                        CornerRadius="2" 
                                        IsHitTestVisible="False" 
                                        Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" 
                                        BorderBrush="{TemplateBinding MouseOverBrush}" 
                                        BorderThickness="0" 
                                        Background="#FFDCE9EF" 
                                        CornerRadius="2" 
                                        IsHitTestVisible="False" 
                                        Visibility="Collapsed"/>
                        <Border x:Name="FilterElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="0" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="2" IsHitTestVisible="False" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1ComboBoxItem}" BasedOn="{StaticResource C1ComboBoxItemStyle}"/>

    <Style x:Key="C1ComboBoxStyle_PDA" TargetType="{x:Type c1:C1ComboBox}">
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="ButtonBackground" Value="Gainsboro"/>
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="FocusBrush" Value="#FFC3C3C3"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="SelectionBackground" Value="#FFFFFFFF"/>
        <Setter Property="SelectionForeground" Value="#FF4D4C4C"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="ButtonForeground" Value="#FF4D4C4C"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="Gainsboro"/>
                    <Setter Property="BorderBrush" Value="#FF707070"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="1E-05*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                        <c1:C1BrushBuilder.Style>
                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                <Setter Property="DesignBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                            <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                            </Style>
                                        </c1:C1BrushBuilder.Style>
                                    </c1:C1BrushBuilder>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition Width="1E-05*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.Style>
                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                        <Setter Property="DesignBrush">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                    <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                    </Style>
                                                </c1:C1BrushBuilder.Style>
                                            </c1:C1BrushBuilder>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBox}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                        <c1:C1DropDown x:Name="DropDown" AutoSizeMode="GrowAndShrink" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding ButtonBackground}" CornerRadius="{TemplateBinding CornerRadius}" DropDownWidth="{TemplateBinding DropDownWidth}" DisabledCuesVisibility="Visible" DropDownHeight="{TemplateBinding DropDownHeight}" DropDownDirection="{TemplateBinding DropDownDirection}" FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}" FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding ButtonForeground}" HeaderPadding="0" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" MouseOverBrush="{TemplateBinding MouseOverBrush}" MaxDropDownWidth="{TemplateBinding MaxDropDownWidth}" MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}" Padding="0" PressedBrush="{TemplateBinding PressedBrush}">
                            <c1:C1DropDown.Header>
                                <Grid>
                                    <Border Background="{TemplateBinding Background}">
                                        <Border.CornerRadius>
                                            <Binding ConverterParameter="topleft bottomleft" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.CornerRadius>
                                    </Border>
                                    <c1:C1TextEditableContentControl x:Name="ComboHeader" BorderThickness="0" 
                                                                             DisabledCuesVisibility="Collapsed" 
                                                                             Padding="9,0,0,0" 
                                                                             Foreground="{TemplateBinding Foreground}"
                                                                             SelectionForeground="{TemplateBinding SelectionForeground}" 
                                                                             SelectionBackground="{TemplateBinding SelectionBackground}" 
                                                                             FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                                                             IsTabStop="True" IsDirty="False" IsEnabled="{TemplateBinding IsEnabled}" 
                                                                             TextAlignment="{TemplateBinding TextAlignment}" 
                                                                             TabIndex="{TemplateBinding TabIndex}" 
                                                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="HeaderClickInterceptor" Fill="Transparent"/>
                                </Grid>
                            </c1:C1DropDown.Header>
                            <ScrollViewer x:Name="ScrollViewer" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="Gainsboro"/>
                                        <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD"/>
                                        <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
                                        <Setter Property="Padding" Value="4"/>
                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2"/>
                                        <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black"/>
                                        <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Background" Value="Gainsboro"/>
                                                    <Setter Property="BorderBrush" Value="#FF707070"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                                                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                        <RowDefinition Height="1E-05*"/>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                    </Grid.RowDefinitions>
                                                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.Style>
                                                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                <Setter Property="DesignBrush">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                            <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                            <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                            <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                            </Style>
                                                                        </c1:C1BrushBuilder.Style>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <Grid>
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="Orientation" Value="Horizontal">
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                            <Setter Property="Width" Value="Auto"/>
                                                            <Setter Property="MinWidth" Value="0"/>
                                                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                <ColumnDefinition Width="1E-05*"/>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.Style>
                                                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                        <Setter Property="DesignBrush">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                    <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                    <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                    <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                    </Style>
                                                                                </c1:C1BrushBuilder.Style>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <Grid>
                                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Pressed">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Disabled">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                    </VisualStateGroup>
                                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                                </Grid>
                                                                                                            </Grid>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Vertical" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                            </Grid>
                                                            <ScrollBar x:Name="PART_VerticalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="1" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=verticalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Vertical" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="0" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="0" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=horizontalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Horizontal" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="1" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <c1:ScrollViewerTouchBehavior/>
                                </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </c1:C1DropDown>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1ComboBoxItem}" x:Key="C1ComboBoxItemStyle_PDA" >
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="Height" Value="19"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBoxItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterCondition">
                                <VisualState x:Name="UnselectPrevious"/>
                                <VisualState x:Name="SelectFirstOne">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FilterElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="SelectedBackground" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding SelectedBackground}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDEF3FA" Offset="0"/>
                                    <GradientStop Color="#FFA8D4E3" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1FBFF" Offset="0"/>
                                    <GradientStop Color="#FFC5E3ED" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}"/>
                        <Border x:Name="SelectedElement" 
                                        BorderBrush="{TemplateBinding SelectedBackground}" 
                                        BorderThickness="0" 
                                        Background="#FFFFD0DA" 
                                        CornerRadius="2" 
                                        IsHitTestVisible="False" 
                                        Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" 
                                        BorderBrush="{TemplateBinding MouseOverBrush}" 
                                        BorderThickness="0" 
                                        Background="#FFDCE9EF" 
                                        CornerRadius="2" 
                                        IsHitTestVisible="False" 
                                        Visibility="Collapsed"/>
                        <Border x:Name="FilterElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="0" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="2" IsHitTestVisible="False" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="C1ComboBoxStyle_Mandatory" TargetType="{x:Type c1:C1ComboBox}"  BasedOn="{StaticResource C1ComboBoxStyle}">
        <Setter Property="Background" Value="#FFFFFFE0 "/>
    </Style>
    <!--RadioButton Style-->

    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonBaseStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="7,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image x:Name="CheckedImage" Visibility="Collapsed" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/radio_selected.png" Width="19" Height="19" Stretch="Fill"/>
                            <Image x:Name="UncheckedImage" Visibility="Visible" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/radio_unselected.png" Width="19" Height="19" Stretch="Fill"/>
                        </Grid>
                        <ContentPresenter
							Grid.Column="1"
							x:Name="contentPresenter"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonBaseStyle}" />

    <Style TargetType="{x:Type RadioButton}" x:Key="SearchCondition_RadioButtonStyle" BasedOn="{StaticResource RadioButtonBaseStyle}" />

    <Style TargetType ="{x:Type RadioButton}" x:Key="RadioButtonUnusedStyle" BasedOn="{StaticResource RadioButtonBaseStyle}">
        <Setter Property="Foreground" Value="#FFD3D3D3"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    <!--CheckBox Style-->

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxBaseStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FF4d4c4c"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="7,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image x:Name="CheckedImage" Visibility="Collapsed" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/checkbox_checked.png" Width="19" Height="19" Stretch="Fill"/>
                            <Image x:Name="UncheckedImage" Visibility="Visible" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/checkbox_unchecked.png" Width="19" Height="19" Stretch="Fill"/>
                        </Grid>
                        <ContentPresenter
							Grid.Column="1"
							x:Name="contentPresenter"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxBaseStyle}" />

    <Style TargetType="{x:Type CheckBox}" x:Key="SearchCondition_CheckBoxStyle" BasedOn="{StaticResource CheckBoxBaseStyle}" />

    <!--DatePicker Style-->

    <Style TargetType="{x:Type DatePickerTextBox}" x:Key="DataPickerTextBoxBaseStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="MouseOver"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unwatermarked"/>
                                <VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1" Padding="9,0" >
                            <Grid x:Name="WatermarkContent" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Border x:Name="ContentElement" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Border x:Name="watermark_decorator" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center" >
                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" VerticalContentAlignment="Center"/>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource DataPickerTextBoxBaseStyle}" />

    <Style TargetType="{x:Type DatePickerTextBox}" x:Key="SearchCondition_DatePickerTextBoxStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="MouseOver"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unwatermarked"/>
                                <VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1" Padding="7,0" >
                            <Grid x:Name="WatermarkContent" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Border x:Name="ContentElement" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Border x:Name="watermark_decorator" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center" >
                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" VerticalContentAlignment="Center"/>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="DatePickerBaseStyle">
        <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" />
                            <Button x:Name="PART_Button" Grid.Column="1" Width="27" Height="27" BorderThickness="0" Margin="5,0,0,0">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image x:Name="CalendarImage" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/icon_cal.png" Stretch="Fill"/>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Popup x:Name="PART_Popup"  AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource DatePickerBaseStyle}"/>

    <Style TargetType="{x:Type DatePicker}" x:Key="SearchCondition_DatePickerStyle" BasedOn="{StaticResource DatePickerBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Style="{StaticResource SearchCondition_DatePickerTextBoxStyle}"/>
                            <Button x:Name="PART_Button" Grid.Column="1" Width="27" Height="27" BorderThickness="0" Margin="5,0,0,0">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image x:Name="CalendarImage" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/icon_cal.png" Stretch="Fill"/>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Popup x:Name="PART_Popup"  AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button Style-->

    <Style TargetType="{x:Type Button}" x:Key="ButtonBaseStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFD8D8D8"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <ContentPresenter x:Name="contentPresenter"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFE9E9E9"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}"/>

    <Style TargetType="{x:Type Button}" x:Key="SearchCondition_ButtonStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="#FFF3F3F3"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="35"/>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonStyle" BasedOn="{StaticResource ButtonBaseStyle}" />

    <!--============================================================================================================-->

    <Style TargetType="{x:Type Button}" x:Key="ButtonIconBaseStyle">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFD8D8D8"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="#FFFFFFFF"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand"/>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFBDBDBD" Offset="0"/>
                                    <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFE9E9E9" BorderThickness="1" BorderBrush="#FFD8D8D8" Visibility="Collapsed"/>
                        <Border x:Name="BorderImage" Height="13" Width="13"
							Background="{TemplateBinding Background}"
							BorderThickness="0" Cursor="Hand"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonExpandStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_expand.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonUpStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_up.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonDownStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_down.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonAddStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_add.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonDeleteStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_subtract.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonRefreshStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_refresh.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonInlineStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="#FFF3F3F3"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="Height" Value="35"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonSearchStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_up.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonCloseStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/icon_pivot_erase.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonPrevStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_prev.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonNextStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_next.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonPrev02Style" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_arrow2_left.png" Stretch="Fill" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonNext02Style" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_arrow2_right.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonListStyle"  BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_list.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonDeleteStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/ico-delete.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--============================================================================================================-->

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskButtonStyle">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_m.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="Transparent"
							BorderThickness="{TemplateBinding BorderThickness}" Cursor="Hand">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_l.png" Stretch="Fill"/>
                                <Border Grid.Column="1" x:Name="BackgroundBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Image Grid.Column="2" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_r.png" Stretch="Fill"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}" Cursor="Hand"/>

                        <Border x:Name="DisabledVisualElement"
							Background="#FFE9E9E9"
							BorderThickness="1"
							BorderBrush="#FFD8D8D8"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SubTaskSpecialButtonStyle" BasedOn="{StaticResource Content_SubTaskButtonStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_special.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel Orientation="Horizontal" Cursor="Hand">
                            <Border x:Name="Border"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </StackPanel>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFE9E9E9"
							BorderThickness="1"
							BorderBrush="#FFD8D8D8"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MenuPrevStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF474751"/>
        <!--<Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand"/>
                        <Border x:Name="BorderImage" Height="14" Width="10" BorderThickness="0" Cursor="Hand" Margin="5,0,5,0">
                            <Border.Background>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_left_n.png" Stretch="Fill"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderImage">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_left_o.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MenuNextStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF474751"/>
        <!--<Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand"/>
                        <Border x:Name="BorderImage" Height="14" Width="10" BorderThickness="0" Cursor="Hand" Margin="5,0,5,0">
                            <Border.Background>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_right_n.png" Stretch="Fill"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderImage">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_right_o.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MegaMenuPrevStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF474751"/>
        <!--<Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand"/>
                        <Border x:Name="BorderImage" Height="14" Width="10" BorderThickness="0" Cursor="Hand" Margin="5,0,5,0">
                            <Border.Background>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_left_n.png" Stretch="Fill"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderImage">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_left_n.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MegaMenuNextStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF474751"/>
        <!--<Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand"/>
                        <Border x:Name="BorderImage" Height="14" Width="10" BorderThickness="0" Cursor="Hand" Margin="5,0,5,0">
                            <Border.Background>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_right_n.png" Stretch="Fill"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderImage">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_1menu_right_n.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_AllMenuStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF474751"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderBackground"
							Background="#FF474751"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="13"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="13"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" x:Name="BorderImage01" Height="25" Width="13" BorderThickness="0" Cursor="Hand">
                                <Border.Background>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_left.png" Stretch="Fill"/>
                                </Border.Background>
                            </Border>
                            <Border Grid.Column="1" x:Name="BorderImage02" Height="25" Width="Auto" BorderThickness="0" Cursor="Hand">
                                <Border.Background>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_center.png" Stretch="Fill"/>
                                </Border.Background>
                            </Border>
                            <Border Grid.Column="1" x:Name="BorderImage03" Height="4"  Width="7" BorderThickness="0" Cursor="Hand" HorizontalAlignment="Right">
                                <Border.Background>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_i_allmenu_nor.png" Stretch="Fill" />
                                </Border.Background>
                            </Border>
                            <Border Grid.Column="2" x:Name="BorderImage04" Height="25" Width="13" BorderThickness="0" Cursor="Hand">
                                <Border.Background>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_right.png" Stretch="Fill"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                        <TextBlock x:Name="txtContent" Text="{TemplateBinding Content}" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" FontSize="14" Foreground="#FFE9E9E9" 
   						           VerticalAlignment="Center" HorizontalAlignment="Left" Margin="13,-3,8,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderImage01">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_sel_left.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="BorderImage02">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_sel_center.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="BorderImage03">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_i_allmenu_sel.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="BorderImage04">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/top_bg_allmenu_sel_right.png"  Stretch="Fill"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" TargetName="txtContent" Value="#FFFFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--============================================================================================================-->

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonSpecialStyle">
        <Setter Property="Height" Value="29"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FF474747" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF555561" Offset="0"/>
                                    <GradientStop Color="#FF474751" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FFC8294B" BorderThickness="1" BorderBrush="#FFA6213E" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonStyle">
        <Setter Property="Height" Value="29"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FFAAAAAA" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                    <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FF333333" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFBDBDBD" Offset="0"/>
                                    <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF333333" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ButtonFocusStyle">
        <Setter Property="Height" Value="29"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="BorderBrush" Value="#FFD42D2D" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FF474747" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF555561" Offset="0"/>
                                    <GradientStop Color="#FF474751" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FFC8294B" BorderThickness="1" BorderBrush="#FFA6213E" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonExcelImportStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FFBEBEBE" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                    <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_excel.png" Width="16" Height="15" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FF333333" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFBDBDBD" Offset="0"/>
                                    <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image     Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_excel.png" Width="16" Height="15" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FF333333" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image     Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_table_excel.png" Width="16" Height="15" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_ModuleButtonExcelExportStyle" BasedOn="{StaticResource Content_ModuleButtonExcelImportStyle}">
        <Setter Property="Content" Value="Export"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNoMinWidthSpecialStyle" >
        <Setter Property="Height" Value="23"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FF474747" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF555561" Offset="0"/>
                                    <GradientStop Color="#FF474751" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FFC8294B" BorderThickness="1" BorderBrush="#FFA6213E" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNoMinWidthSpecialPackStyle" >
        <Setter Property="Height" Value="29"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FF474747" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF555561" Offset="0"/>
                                    <GradientStop Color="#FF474751" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FFC8294B" BorderThickness="1" BorderBrush="#FFA6213E" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNoMinWidthStyle">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FFAAAAAA" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                    <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FF333333" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FFBDBDBD" Offset="0"/>
                                    <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF333333" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#FF8A8A8A" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--============================================================================================================-->

    <Style TargetType="Button" x:Key="SearchButtonStyle">
        <Setter Property="Height" Value="29"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="#FFC8294B"  BorderThickness="1" BorderBrush="#FFA6213E" Cursor="Hand">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/search_i_searchbtn.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF730E24" Offset="0"/>
                                    <GradientStop Color="#FF961833" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/search_i_searchbtn.png" Width="14" Height="14" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFE9E9E9" BorderThickness="1" BorderBrush="#FFD8D8D8" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/search_i_searchbtn.png" Width="14" Height="14" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="{x:Type Button}" x:Key="SaveButtonStyle">
        <Setter Property="Height" Value="29"/>
        <Setter Property="Padding" Value="12,-1,12,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="58"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#FF474747" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF555561" Offset="0"/>
                                    <GradientStop Color="#FF474751" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/i_savebtnw.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" x:Name="contentPresenter" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FFC8294B" BorderThickness="1" BorderBrush="#FFA6213E" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/i_savebtnw.png" Width="14" Height="14" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA" BorderThickness="1" BorderBrush="#FFCCCCCC" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <Image            Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/i_savebtnw.png" Width="14" Height="14" Stretch="Fill"/>
                                <TextBlock Grid.Column="3" Text="{TemplateBinding Content}" Foreground="#FF666666" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            </Grid>

                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SearchButtonStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/icon_input_search.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SearchButtonStyleNoImage"  BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Margin" Value="0,12,17,12" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="96"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Content" Value="Search"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="#FFC8294B"  BorderThickness="1" BorderBrush="#FFA6213E" Cursor="Hand">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="1" x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" BorderThickness="1" BorderBrush="#FFBEBEBE" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                    <GradientStop Color="#FF730E24" Offset="0"/>
                                    <GradientStop Color="#FF961833" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFE9E9E9" BorderThickness="1" BorderBrush="#FFD8D8D8" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-1,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControl01Style" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" 
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControl03Style" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_reset.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_reset.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_reset.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControlBarCodeStyle" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_barcode.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_reset.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_reset.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControl04Style" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_complete.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_complete.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_complete.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControl02Style" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_confirm.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_confirm.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_confirm.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_start.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainControl05Style" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF474747"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedVisualElement"
												Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"	Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF555561" Offset="0.5"/>
                                    <GradientStop Color="#FF474751" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_card.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFF0F0F0"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisualElement" Background="#FFC8294B"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFA6213E" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_card.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="PressedVisualElement" Background="#FF8D1C35"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FF720E24" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_card.png" Width="14" Height="14" Stretch="Fill"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#FFAAAAAA"  BorderThickness="{TemplateBinding BorderThickness}"	BorderBrush="#FFCCCCCC" Cursor="Hand" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="9"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_i_main_card.png" Width="14" Height="14" Stretch="Fill" Opacity="0.5"/>
                                <ContentPresenter Grid.Column="3" Margin="0,0,0,0"
									Content="{TemplateBinding Content}" TextBlock.Foreground="#FF666666"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_SaveButtonStyle" BasedOn="{StaticResource ButtonIconBaseStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/i_savebtn.png" Stretch="Uniform"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--============================================================================================================-->

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle" >
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process_nor_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process_nor_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle01" >
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process01_nor_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process01_nor_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle02" >
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process02_nor_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process02_nor_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle03" >
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process03_nor_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process03_nor_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle04">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process04_nor_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process04_nor_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_MainButtonNextStyle05">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process_over_center.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <Image Grid.Column="1" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_btn_process_over_right.png" Height="32" Width="14" Margin="-1,0,0,0" Stretch="Fill"/>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
							Background="Transparent"
							BorderThickness="0"
							BorderBrush="Transparent"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonRunStartImportStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="ExcelImage" Grid.Column="0" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/RunStart.png" Width="16" Height="15" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="6,0,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonRunCancelImportStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="ExcelImage" Grid.Column="0" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/RunCancel.png" Width="16" Height="15" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="6,0,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonRunCompleteImportStyle" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Content" Value="Import"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="ExcelImage" Grid.Column="0" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/RunComplete.png" Width="16" Height="15" Stretch="Fill"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="6,0,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="Content_PDAButtonNoMinWidthStyle">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_sub_task_m.png" Stretch="Fill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <!--<Setter Property="MinWidth" Value="116" />-->
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="#FF4C4C4C"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="Transparent"
							BorderThickness="{TemplateBinding BorderThickness}" Cursor="Hand">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_main_l.png" Stretch="Fill"/>
                                <Border x:Name="BackgroundBorder" Grid.Column="1"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Image Grid.Column="2" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_main_r.png" Stretch="Fill"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}" Cursor="Hand"/>
                        <Border x:Name="DisabledVisualElement"
							Background="#FFE9E9E9"
							BorderThickness="1"
							BorderBrush="#FFD8D8D8"
							Visibility="Collapsed">
                            <TextBlock Text="{TemplateBinding Content}"
								Foreground="#FF8A8A8A"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--InnerSearchTextBox Style-->

    <Style TargetType="{x:Type ctrlLib:InnerSearchTextBox}" x:Key="InnerSearchTextBoxBaseStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="9,0,0,0"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrlLib:InnerSearchTextBox}">
                    <Grid x:Name="LayoutRoot">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                            <Grid Height="{TemplateBinding Height}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="tbSearch" Grid.Column="0" Text="{TemplateBinding Text}"
									Margin="{TemplateBinding Padding}" Padding="0" BorderThickness="0"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Button x:Name="btnSearch" Grid.Column="1" Margin="0,0,4,0" BorderThickness="0" Height="16">
                                    <Button.Background>
                                        <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/icon_input_search.png" Stretch="Uniform"/>
                                    </Button.Background>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrlLib:InnerSearchTextBox}" BasedOn="{StaticResource InnerSearchTextBoxBaseStyle}"/>

    <Style TargetType="{x:Type ctrlLib:InnerSearchTextBox}" x:Key="SearchCondition_InnerSearchTextBoxStyle" BasedOn="{StaticResource InnerSearchTextBoxBaseStyle}">
        <Setter Property="Padding" Value="7,0,0,0"/>
    </Style>

    <!--Calendar Style-->

    <Style TargetType="{x:Type Calendar}" x:Key="DatePickerCalendarStyle">
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}"/>
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#FF828282"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem" Style="{TemplateBinding CalendarItemStyle}"
							Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarItem}" x:Key="CalendarItemStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <Border Background="#FFF8F8F8" Height="39" >
                                <TextBlock FontWeight="Bold" FontSize="12" Text="{Binding}" Foreground="#FF666666" 
									HorizontalAlignment="Center" VerticalAlignment="Center"
									ctrlLib:CalendarDayTextBlock.ApplyStyle="True"/>
                            </Border>
                        </DataTemplate>
                    </ControlTemplate.Resources>

                    <Grid x:Name="PART_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}">
                            <Grid>

                                <Grid.Resources>
                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentControl x:Name="Content" IsTabStop="False" Focusable="False"
												Foreground="#FF4C4C4C" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" FontWeight="Bold"
												Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </ControlTemplate>

                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border x:Name="PreBtnClickArea" Background="Transparent" BorderThickness="0"/>
                                            <Image Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/datepicker_arrow_l.png" Width="7" Height="13" Stretch="Fill" Margin="15,0,0,0"/>
                                        </Grid>
                                    </ControlTemplate>

                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border x:Name="NextBtnClickArea" Background="Transparent" BorderThickness="0"/>
                                            <Image Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/datepicker_arrow_r.png" Width="7" Height="13" Stretch="Fill" Margin="0,0,15,0"/>
                                        </Grid>
                                    </ControlTemplate>

                                    <ControlTemplate x:Key="EmptyButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Arrow">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentControl x:Name="Content" IsTabStop="False" Focusable="False" Content=""/>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="TitleUnderBar" Grid.ColumnSpan="5" BorderBrush="#FF828282" BorderThickness="0,0,0,1"/>
                                <Button x:Name="PART_PreviousButton" Grid.Column="0" Width="40" Height="40"  IsTabStop="False" Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" HorizontalAlignment="Left"/>
                                <Button x:Name="PART_LeftEmptyButton" Grid.Column="1"  IsTabStop="False" Focusable="False" Cursor="Arrow" BorderThickness="0,0,0,0"
                                        Template="{StaticResource EmptyButtonTemplate}"/>
                                <Button x:Name="PART_HeaderButton" Grid.Column="2"  IsTabStop="False" Focusable="False"
                                        Template="{StaticResource HeaderButtonTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Button x:Name="PART_RightEmptyButton" Grid.Column="3"  IsTabStop="False" Focusable="False" Cursor="Arrow" BorderThickness="0,0,0,0"
                                        Template="{StaticResource EmptyButtonTemplate}"/>
                                <Button x:Name="PART_NextButton" Grid.Column="4" Width="40" Height="40"  IsTabStop="False" Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" HorizontalAlignment="Right"/>

                                <Grid x:Name="PART_MonthView" Grid.Row="1" Grid.ColumnSpan="5" Margin="-1,0,0,0" Visibility="Visible">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <Border Grid.Row="1" Grid.ColumnSpan="5" Margin="-1,0,0,0"
									BorderBrush="#FF828282" BorderThickness="1,0,0,0"/>

                                <Grid x:Name="PART_YearView" Grid.Row="1" Grid.ColumnSpan="5" Margin="-1,-1,0,0" Visibility="Collapsed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <Border Grid.Row="1" Grid.ColumnSpan="5" Margin="-1,-1,0,0"
									BorderBrush="#FF828282" BorderThickness="1,1,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
							Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
							Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarDayButton}" x:Key="CalendarDayButtonStyle">
        <Setter Property="ctrlLib:CalendarDayButton.ApplyStyle" Value="True"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="#FFDFDFDF"/>
        <Setter Property="BorderThickness" Value="1,1,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused"/>
                                <VisualState x:Name="CalendarButtonUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Content"
											Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FFC5C5C5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay"/>
                                <VisualState x:Name="Today"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay"/>
                                <VisualState x:Name="BlackoutDay"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Visibility="Visible"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                            <ContentControl x:Name="Content" IsTabStop="False"
								Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <Border x:Name="SelectedBorder" Visibility="Collapsed"
							BorderBrush="#FFE63C6B" BorderThickness="1"
							Background="#FFE63C6B">
                            <ContentControl IsTabStop="False"
								Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								FontSize="{TemplateBinding FontSize}" Foreground="#FFFFFFFF"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarButton}" x:Key="CalendarButtonStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="#FFDFDFDF"/>
        <Setter Property="BorderThickness" Value="1,1,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Inactive"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused"/>
                                <VisualState x:Name="CalendarButtonUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border" Visibility="Visible"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                            <ContentControl x:Name="Content" IsTabStop="False"
								Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <Border x:Name="SelectedBorder" Visibility="Collapsed"
							BorderBrush="#FFE63C6B" BorderThickness="1"
							Background="#FFE63C6B">
                            <ContentControl IsTabStop="False"
								Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								FontSize="{TemplateBinding FontSize}" Foreground="#FFFFFFFF"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Chart Style-->

    <Style TargetType="{x:Type c1:C1Chart}" x:Key="C1ChartBaseStyle">
        <Setter Property="ctrlLib:ChartLegend.ApplyStyle" Value="True"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF8A8A8A"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style TargetType="c1:C1Chart" BasedOn="{StaticResource C1ChartBaseStyle}"/>

    <Style TargetType="c1:C1Chart" x:Key="C1ChartNormalStyle" BasedOn="{StaticResource C1ChartBaseStyle}">
        <Setter Property="CustomPalette">
            <Setter.Value>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="0" Color="#FFFBECEE"/>
                    <SolidColorBrush x:Key="1" Color="#FFEEC4C8"/>
                    <SolidColorBrush x:Key="2" Color="#FFE2B7CE"/>
                    <SolidColorBrush x:Key="3" Color="#FF995E97"/>
                    <SolidColorBrush x:Key="4" Color="#FFF7D9DC"/>
                    <SolidColorBrush x:Key="5" Color="#FFEDB0BE"/>
                    <SolidColorBrush x:Key="6" Color="#FFC895C6"/>
                </ResourceDictionary>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1:C1Chart" x:Key="C1ChartImpressiveStyle" BasedOn="{StaticResource C1ChartBaseStyle}">
        <Setter Property="CustomPalette">
            <Setter.Value>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="0" Color="#FFF7D9DC"/>
                    <SolidColorBrush x:Key="1" Color="#FFFF6C9B"/>
                    <SolidColorBrush x:Key="2" Color="#FFCB2158"/>
                    <SolidColorBrush x:Key="3" Color="#FF78072B"/>
                    <SolidColorBrush x:Key="4" Color="#FFF4B1C7"/>
                    <SolidColorBrush x:Key="5" Color="#FFEB336E"/>
                    <SolidColorBrush x:Key="6" Color="#FFA61141"/>
                </ResourceDictionary>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1:C1Chart" x:Key="C1ChartSpecialItemStyle" BasedOn="{StaticResource C1ChartBaseStyle}">
        <Setter Property="CustomPalette">
            <Setter.Value>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="0" Color="#FFEB336E"/>
                    <SolidColorBrush x:Key="1" Color="#FF6E6E6E"/>
                    <SolidColorBrush x:Key="2" Color="#FF858585"/>
                    <SolidColorBrush x:Key="3" Color="#FFA9A9A9"/>
                    <SolidColorBrush x:Key="4" Color="#FFB7B7B7"/>
                    <SolidColorBrush x:Key="5" Color="#FFC8C8C8"/>
                    <SolidColorBrush x:Key="6" Color="#FFE5E5E5"/>
                </ResourceDictionary>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:DataSeries}">
        <Setter Property="ctrlLib:ChartDataSeries.ApplyStyle" Value="True"/>
    </Style>

    <Style TargetType="{x:Type c1:C1ChartLegend}">
        <Setter Property="Background" Value="#FFF2F2F2"/>
        <Setter Property="Foreground" Value="#FF8A8A8A"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Padding" Value="8,8,9,4"/>
        <Setter Property="ItemsSource" Value="{Binding Path=LegendItems}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="{Binding ItemsPanelOrientation}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ChartLegend}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" 
						BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                        <ItemsControl ItemsPanel="{TemplateBinding ItemsPanel}" ItemTemplate="{TemplateBinding ItemTemplate}" 
							ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
                        <Canvas Width="24" Background="Transparent">
                            <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
								Width="14" Height="14">
                                <Border Background="{Binding Symbol.Fill}"/>
                            </ContentControl>
                            <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
								Width="14" Height="14" Content="{Binding Line}"/>
                        </Canvas>
                        <TextBlock Text="{Binding Label}" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Tab Control Style-->

    <Style TargetType="{x:Type c1:C1TabControl}">
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="TabStripBackground" Value="Gainsboro"/>
        <Setter Property="BorderBrush" Value="#FF8A8A8A" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabStripForeground" Value="Black"/>
        <Setter Property="SelectedBackground" Value="White"/>
        <Setter Property="TabStripOverlap" Value="0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TabItemShape" Value="Rounded"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabControl}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,-1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,-1,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="TabPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Horizontal</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Reverse" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineTabItems">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="PreviousButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="NextButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,0,-1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Reverse" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,0,-1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="TabPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Horizontal</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineTabItems">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="PreviousButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="NextButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShapeStates">
                                <VisualState x:Name="Rectangle"/>
                                <VisualState x:Name="Rounded"/>
                                <VisualState x:Name="Sloped"/>
                                <VisualState x:Name="Ribbon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftFilling">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RightFilling">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1LinePanel x:Name="LineOuter" Margin="{TemplateBinding Padding}" Orientation="Vertical" Reverse="True">
                            <c1:C1LinePanel.LineDefinitions>
                                <c1:LineDefinition Length="Auto"/>
                                <c1:LineDefinition Length="*"/>
                            </c1:C1LinePanel.LineDefinitions>
                            <c1:C1LinePanel x:Name="LineTabItems" Orientation="Horizontal" Panel.ZIndex="100">
                                <c1:C1LinePanel.LineDefinitions>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="*"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                </c1:C1LinePanel.LineDefinitions>
                                <c1:C1LinePanel.Visibility>
                                    <Binding Path="ShowTabs" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:VisibilityConverter Opposite="False"/>
                                        </Binding.Converter>
                                    </Binding>
                                </c1:C1LinePanel.Visibility>
                                <Border x:Name="LeftFilling" Height="8" Visibility="Collapsed" Width="8"/>
                                <RepeatButton x:Name="PreviousButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Previous}" Width="15">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path Data="M5.3,1E-07L7,1E-07 4.7,2.5 7,5 5.3,5 3,2.5z M2.3,0L4,0 1.7,2.5 4,5 2.3,5 0,2.5z" Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Right" Height="5" Stretch="Uniform" Width="7"/>
                                </RepeatButton>
                                <ContentPresenter x:Name="TabPanelPresenter" Grid.Column="1" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" Margin="0,-1,0,0" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}">
                                    <ContentPresenter.Content>
                                        <c1:C1TabPanel x:Name="TabPanel" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                                <RepeatButton x:Name="NextButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding TabStripBackground}" Grid.Column="3" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Next}" Width="15">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path Data="M3,0L4.67,0 7,2.5 4.67,5 3,5 5.3,2.5z M0,0L1.67,0 4,2.5 1.67,5 0,5 2.3,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="5" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                </RepeatButton>
                                <c1:C1DropDownButton x:Name="TabStripDropDown" AutoClose="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" IsTabStop="False" Margin="2" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Menu}" Visibility="{TemplateBinding TabStripMenuVisibility}" Width="15">
                                    <c1:C1DropDownButton.Header>
                                        <Grid Height="4" Margin="0,5,0,0" VerticalAlignment="Top" Width="7">
                                            <Polygon Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Center" Points="0,0 3.5,3.5 7,0" VerticalAlignment="Center"/>
                                            <Rectangle Fill="{TemplateBinding TabStripForeground}" Height="1" Margin="0,-2,0,0" StrokeThickness="0" VerticalAlignment="Top"/>
                                        </Grid>
                                    </c1:C1DropDownButton.Header>
                                    <c1:C1DropDownButton.Style>
                                        <Style TargetType="{x:Type c1:C1DropDownButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="DropDownOpenStates">
                                                                    <VisualState x:Name="Closed"/>
                                                                    <VisualState x:Name="Opened"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="Disabled"/>
                                                                    <VisualState x:Name="MouseOver"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Unfocused"/>
                                                                    <VisualState x:Name="Focused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsTabStop="True" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ButtonBase}">
                                                                        <Setter Property="Padding" Value="3"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                    <Grid>
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked"/>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                    <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                        <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                        <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                                <ContentPresenter Content="{TemplateBinding Header}" Margin="{TemplateBinding HeaderPadding}"/>
                                                            </ToggleButton>
                                                            <Popup x:Name="DropDownPopup" Grid.Row="1">
                                                                <Grid Height="{TemplateBinding DropDownHeight}" MaxWidth="{TemplateBinding MaxDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding MinDropDownWidth}" Width="{TemplateBinding DropDownWidth}">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                                </Grid>
                                                            </Popup>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </c1:C1DropDownButton.Style>
                                    <c1:C1MenuList x:Name="Menu" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" Foreground="{TemplateBinding TabStripForeground}" HighlightedBackground="{TemplateBinding MouseOverBrush}" IsTabStop="True" FocusManager.IsFocusScope="True" OpenedBackground="{TemplateBinding PressedBrush}" Padding="0" KeyboardNavigation.TabNavigation="Once"/>
                                </c1:C1DropDownButton>
                                <Button x:Name="CloseButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" Grid.Column="5" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2,2,4,2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Grid.Row="5" ToolTip="{Binding CloseGlobal}" VerticalAlignment="Center" Width="15">
                                    <Button.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                    <Path Data="M0,0L1.6,0 3,1.56 4.4,0 6,0 3.8,2.5 6,5 4.4,5 3,3.49 1.59,5 -4.2E-09,5 2.18,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="6" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                </Button>
                                <Border x:Name="RightFilling" Height="8" Visibility="Collapsed" Width="8"/>
                            </c1:C1LinePanel>
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="SelectedItemContent" ContentTemplate="{x:Null}"/>
                                </Border>
                                <Rectangle x:Name="DisabledVisualElement" Fill="#77E8E8E8" Visibility="Collapsed"/>
                            </Grid>
                        </c1:C1LinePanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TabItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin"  Value="0,0,0,-1" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="12" TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="34" />
        <!--<Setter Property="Width" Value="138" />-->
        <Setter Property="MinWidth" Value="90" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabItem}">
                    <Grid Background="{x:Null}" FlowDirection="LeftToRight">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="LeftTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Left</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Top</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Right</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Bottom</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PinModeStates">
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Unselected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1TabItemPresenter x:Name="C1TabItemPresenter" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsSelected="{TemplateBinding IsSelected}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" TabShape="{TemplateBinding TabShape}" Margin="0,0,4,0">
                            <c1:C1TabItemPresenter.BorderThickness>
                                <Binding ConverterParameter="left-top-right" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <c1:C1SideThicknessConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </c1:C1TabItemPresenter.BorderThickness>
                            <Grid Margin="-8,0" Height="34">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2" Fill="#01ffffff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}" Margin="25,0,25,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Margin="0" Orientation="Horizontal">
                                    <StackPanel x:Name="StackPanelPinButtons" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="Collapsed">
                                        <Button x:Name="UnpinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Pin}" VerticalAlignment="Center" Width="14">
                                            <Button.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Grid x:Name="AutoHideIcon" Height="14" Width="14">
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="0,0,1,1" HorizontalAlignment="Left" Height="4" Margin="7,0,0,1" VerticalAlignment="Bottom" Width="1"/>
                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="1,1,0,0" HorizontalAlignment="Left" Height="7" Margin="5,2,0,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Width="5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                    </Grid>
                                                </Border>
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="1" Margin="4,0,0,5" VerticalAlignment="Bottom" Width="7"/>
                                            </Grid>
                                        </Button>
                                        <Button x:Name="PinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" IsEnabled="False" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding UnPin}" Visibility="Collapsed" VerticalAlignment="Center" Width="14">
                                            <Button.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Grid x:Name="AutoHideIcon2" Height="14" Width="14">
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1,0,0,1" HorizontalAlignment="Left" Height="1" Margin="1,0,0,7" VerticalAlignment="Bottom" Width="4"/>
                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="0,1,1,0" HorizontalAlignment="Right" Height="5" Margin="0,0,1,5" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Width="7">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                    </Grid>
                                                </Border>
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="7" Margin="5,0,0,4" VerticalAlignment="Bottom" Width="1"/>
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                    <Button x:Name="CloseButton" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Close}" VerticalAlignment="Center" Margin="9,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <Grid Height="11" Width="11" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{x:Null}">
                                            <Image Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/MDI_tab_close.png" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </c1:C1TabItemPresenter>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TabItemPresenter}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabItemPresenter}">
                    <Grid x:Name="Container" VerticalAlignment="Bottom" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="Container">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftTabStripPlacement">
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1LayoutTransformer x:Name="OuterTransformer" IsTabStop="False">
                            <Grid x:Name="MiddleGrid" Margin="0">
                                <Border x:Name="BackgroundElement" BorderBrush="#FF9E9E9E" BorderThickness="1,1,1,0" Background="#ffebebeb" Height="32" VerticalAlignment="Top"  />
                                <Border x:Name="SelectedElement" BorderBrush="#FF8A8A8A" BorderThickness="2,2,2,0" Background="#fff9f9f9" Visibility="Collapsed"/>
                                <c1:C1TabItemBorder CornerRadius="{TemplateBinding CornerRadius}" Shape="{TemplateBinding TabShape}">
                                    <c1:C1LayoutTransformer x:Name="InnerTransformer" IsTabStop="False" Margin="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="ContentBorder">
                                            <c1:C1LayoutRounder ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                        </Border>
                                    </c1:C1LayoutTransformer>
                                </c1:C1TabItemBorder>
                            </Grid>
                        </c1:C1LayoutTransformer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Tab Control Style Main-->

    <Style TargetType="{x:Type c1:C1TabControl}" x:Key="C1TabControlStyleMain">
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="TabStripBackground" Value="Gainsboro"/>
        <Setter Property="BorderBrush" Value="#FFC8294B" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabStripForeground" Value="Black"/>
        <Setter Property="SelectedBackground" Value="White"/>
        <Setter Property="TabStripOverlap" Value="0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TabItemShape" Value="Rounded"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabControl}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,-1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,-1,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="TabPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Horizontal</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Reverse" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineTabItems">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="PreviousButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="NextButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,0,-1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Reverse" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TabPanelPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,0,-1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="TabPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineOuter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Horizontal</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="LineTabItems">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Orientation>Vertical</Orientation>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="PreviousButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="NextButton">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShapeStates">
                                <VisualState x:Name="Rectangle"/>
                                <VisualState x:Name="Rounded"/>
                                <VisualState x:Name="Sloped"/>
                                <VisualState x:Name="Ribbon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftFilling">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RightFilling">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1LinePanel x:Name="LineOuter" Margin="{TemplateBinding Padding}" Orientation="Vertical" Reverse="True">
                            <c1:C1LinePanel.LineDefinitions>
                                <c1:LineDefinition Length="Auto"/>
                                <c1:LineDefinition Length="*"/>
                            </c1:C1LinePanel.LineDefinitions>
                            <c1:C1LinePanel x:Name="LineTabItems" Orientation="Horizontal" Panel.ZIndex="100">
                                <c1:C1LinePanel.LineDefinitions>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="*"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                    <c1:LineDefinition Length="Auto"/>
                                </c1:C1LinePanel.LineDefinitions>
                                <c1:C1LinePanel.Visibility>
                                    <Binding Path="ShowTabs" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:VisibilityConverter Opposite="False"/>
                                        </Binding.Converter>
                                    </Binding>
                                </c1:C1LinePanel.Visibility>
                                <Border x:Name="LeftFilling" Height="8" Visibility="Collapsed" Width="8"/>
                                <RepeatButton x:Name="PreviousButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Previous}" Width="15">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path Data="M5.3,1E-07L7,1E-07 4.7,2.5 7,5 5.3,5 3,2.5z M2.3,0L4,0 1.7,2.5 4,5 2.3,5 0,2.5z" Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Right" Height="5" Stretch="Uniform" Width="7"/>
                                </RepeatButton>
                                <ContentPresenter x:Name="TabPanelPresenter" Grid.Column="1" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" Margin="0,-1,0,0" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}">
                                    <ContentPresenter.Content>
                                        <c1:C1TabPanel x:Name="TabPanel" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                                <RepeatButton x:Name="NextButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding TabStripBackground}" Grid.Column="3" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Next}" Width="15">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path Data="M3,0L4.67,0 7,2.5 4.67,5 3,5 5.3,2.5z M0,0L1.67,0 4,2.5 1.67,5 0,5 2.3,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="5" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                </RepeatButton>
                                <c1:C1DropDownButton x:Name="TabStripDropDown" AutoClose="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" IsTabStop="False" Margin="2" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Menu}" Visibility="{TemplateBinding TabStripMenuVisibility}" Width="15">
                                    <c1:C1DropDownButton.Header>
                                        <Grid Height="4" Margin="0,5,0,0" VerticalAlignment="Top" Width="7">
                                            <Polygon Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Center" Points="0,0 3.5,3.5 7,0" VerticalAlignment="Center"/>
                                            <Rectangle Fill="{TemplateBinding TabStripForeground}" Height="1" Margin="0,-2,0,0" StrokeThickness="0" VerticalAlignment="Top"/>
                                        </Grid>
                                    </c1:C1DropDownButton.Header>
                                    <c1:C1DropDownButton.Style>
                                        <Style TargetType="{x:Type c1:C1DropDownButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="DropDownOpenStates">
                                                                    <VisualState x:Name="Closed"/>
                                                                    <VisualState x:Name="Opened"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="Disabled"/>
                                                                    <VisualState x:Name="MouseOver"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Unfocused"/>
                                                                    <VisualState x:Name="Focused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsTabStop="True" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ButtonBase}">
                                                                        <Setter Property="Padding" Value="3"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                    <Grid>
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked"/>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                    <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                        </c1:C1BrushBuilder>
                                                                                        <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                        <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                        <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                        </Border>
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                        <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                                <ContentPresenter Content="{TemplateBinding Header}" Margin="{TemplateBinding HeaderPadding}"/>
                                                            </ToggleButton>
                                                            <Popup x:Name="DropDownPopup" Grid.Row="1">
                                                                <Grid Height="{TemplateBinding DropDownHeight}" MaxWidth="{TemplateBinding MaxDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding MinDropDownWidth}" Width="{TemplateBinding DropDownWidth}">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                                </Grid>
                                                            </Popup>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </c1:C1DropDownButton.Style>
                                    <c1:C1MenuList x:Name="Menu" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" Foreground="{TemplateBinding TabStripForeground}" HighlightedBackground="{TemplateBinding MouseOverBrush}" IsTabStop="True" FocusManager.IsFocusScope="True" OpenedBackground="{TemplateBinding PressedBrush}" Padding="0" KeyboardNavigation.TabNavigation="Once"/>
                                </c1:C1DropDownButton>
                                <Button x:Name="CloseButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" Grid.Column="5" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2,2,4,2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Grid.Row="5" ToolTip="{Binding CloseGlobal}" VerticalAlignment="Center" Width="15">
                                    <Button.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                    <Path Data="M0,0L1.6,0 3,1.56 4.4,0 6,0 3.8,2.5 6,5 4.4,5 3,3.49 1.59,5 -4.2E-09,5 2.18,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="6" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                </Button>
                                <Border x:Name="RightFilling" Height="8" Visibility="Collapsed" Width="8"/>
                            </c1:C1LinePanel>
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="SelectedItemContent" ContentTemplate="{x:Null}"/>
                                </Border>
                                <Rectangle x:Name="DisabledVisualElement" Fill="#77E8E8E8" Visibility="Collapsed"/>
                            </Grid>
                        </c1:C1LinePanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TabItem}"  x:Key="C1TabItemStyleMain">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin"  Value="0,0,0,-1" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="12" TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="34" />
        <!--<Setter Property="Width" Value="138" />-->
        <Setter Property="MinWidth" Value="90" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabItem}">
                    <Grid Background="{x:Null}" FlowDirection="LeftToRight">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="LeftTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Left</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Top</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Right</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:Dock>Bottom</c1:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PinModeStates">
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="Unselected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1TabItemPresenter x:Name="C1TabItemPresenter" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsSelected="{TemplateBinding IsSelected}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" TabShape="{TemplateBinding TabShape}" Style="{DynamicResource C1TabItemPresenterStyleMain}" Margin="0,0,4,0">
                            <c1:C1TabItemPresenter.BorderThickness>
                                <Binding ConverterParameter="left-top-right" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <c1:C1SideThicknessConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </c1:C1TabItemPresenter.BorderThickness>
                            <Grid Margin="-8,0" Height="34">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2" Fill="#01ffffff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                                <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}" TextBlock.Foreground="#FFFFFFFF" Margin="25,0,25,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Margin="0" Orientation="Horizontal">
                                    <StackPanel x:Name="StackPanelPinButtons" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="Collapsed">
                                        <Button x:Name="UnpinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Pin}" VerticalAlignment="Center" Width="14">
                                            <Button.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Grid x:Name="AutoHideIcon" Height="14" Width="14">
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="0,0,1,1" HorizontalAlignment="Left" Height="4" Margin="7,0,0,1" VerticalAlignment="Bottom" Width="1"/>
                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="1,1,0,0" HorizontalAlignment="Left" Height="7" Margin="5,2,0,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Width="5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                    </Grid>
                                                </Border>
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="1" Margin="4,0,0,5" VerticalAlignment="Bottom" Width="7"/>
                                            </Grid>
                                        </Button>
                                        <Button x:Name="PinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" IsEnabled="False" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding UnPin}" Visibility="Collapsed" VerticalAlignment="Center" Width="14">
                                            <Button.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Grid x:Name="AutoHideIcon2" Height="14" Width="14">
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1,0,0,1" HorizontalAlignment="Left" Height="1" Margin="1,0,0,7" VerticalAlignment="Bottom" Width="4"/>
                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="0,1,1,0" HorizontalAlignment="Right" Height="5" Margin="0,0,1,5" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Width="7">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                    </Grid>
                                                </Border>
                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="7" Margin="5,0,0,4" VerticalAlignment="Bottom" Width="1"/>
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                    <Button x:Name="CloseButton" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Close}" VerticalAlignment="Center" Margin="9,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <Grid Height="11" Width="11" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{x:Null}">
                                            <Image Source="/LGC.GMES.MES.ControlsLibrary;Component/Images/LGC/MDI_tab_close.png" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </c1:C1TabItemPresenter>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TabItemPresenter}"  x:Key="C1TabItemPresenterStyleMain">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TabItemPresenter}">
                    <Grid x:Name="Container" VerticalAlignment="Bottom" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="Container">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftTabStripPlacement">
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1LayoutTransformer x:Name="OuterTransformer" IsTabStop="False">
                            <Grid x:Name="MiddleGrid" Margin="0">
                                <Border x:Name="BackgroundElement" BorderBrush="#FF474751" BorderThickness="1,1,1,0" Background="#FF474751" Height="32" VerticalAlignment="Top"  />
                                <Border x:Name="SelectedElement" BorderBrush="#FFC8294B" BorderThickness="2,2,2,0" Background="#FFC8294B" Visibility="Collapsed"/>
                                <c1:C1TabItemBorder CornerRadius="{TemplateBinding CornerRadius}" Shape="{TemplateBinding TabShape}">
                                    <c1:C1LayoutTransformer x:Name="InnerTransformer" IsTabStop="False" Margin="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="ContentBorder">
                                            <c1:C1LayoutRounder ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                        </Border>
                                    </c1:C1LayoutTransformer>
                                </c1:C1TabItemBorder>
                            </Grid>
                        </c1:C1LayoutTransformer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type c1:C1TabControl}" x:Key="C1TabControlStyleEmpty">
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="TabStripBackground" Value="Gainsboro"/>
        <Setter Property="BorderBrush" Value="#FFC8294B" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabStripForeground" Value="Black"/>
        <Setter Property="SelectedBackground" Value="White"/>
        <Setter Property="TabStripOverlap" Value="0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TabItemShape" Value="Rounded"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!--Menu Style-->

    <!--<Style TargetType="Menu" BasedOn="{StaticResource  NormalMenu}"/>-->

    <Style TargetType="{x:Type Menu}" x:Key="NormalMenu">
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="#ffdfe0e2"/>
                <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <!--Border 1-->
                            <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="False" >
                                <Grid x:Name="Grid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" 
                                                          SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition x:Name="Col3" Width="14"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                    <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center" />
                                    <ContentPresenter Grid.Column="2" Margin="8,1,8,1" x:Name="IGTHost" ContentSource="InputGestureText" VerticalAlignment="Center"/>
                                    <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                        <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                    </Grid>
                                    <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Placement="Right" HorizontalOffset="-1" x:Name="SubMenuPopup" Focusable="false" 
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           AllowsTransparency="True">
                                        <Grid Margin="0,0,5,5">
                                            <!--Border 2-->
                                            <Border x:Name="SubMenuBorder" 
                                                    BorderBrush="{StaticResource MenuSeparatorBorderBrush}"
                                                    BorderThickness="1" Background="{StaticResource SubmenuItemBackground}" 
                                                    SnapsToDevicePixels="True">
                                                <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="2">
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="600">
                                                        <StackPanel IsItemsHost="True"
                                                                KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                                    </ScrollViewer>
                                                </Grid>
                                                <Border.Effect>
                                                    <DropShadowEffect ShadowDepth="2" Color="Black"/>
                                                </Border.Effect>
                                            </Border>
                                            <!--Border 3-->
                                            <Border Margin="1,0,0,0" x:Name="TransitionBorder" Width="0" Height="2" 
                                                    VerticalAlignment="Top" HorizontalAlignment="Left" 
                                                    Background="{StaticResource SubmenuItemBackground}" SnapsToDevicePixels="False"
                                                    BorderThickness="1" BorderBrush="{StaticResource SubmenuItemBackground}"/>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" />
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Margin" Value="0,-2,0,2"/>
                                    <Setter Property="Padding" Value="23,0,23,0"/>
                                    <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                                    <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                    <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1"/>
                                    <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2"/>
                                    <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="Padding" Value="6,0,6,2"/>
                                    <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                    <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" />
                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                    <Setter Property="Padding" Value="10,3,0,3"/>
                                    <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                    <Setter Property="Padding" Value="10,3,0,3"/>
                                    <Setter TargetName="Border" Property="MinHeight" Value="32"/>
                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="true"/>
                                        <Condition Property="Role" Value="SubmenuHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="true"/>
                                        <Condition Property="Role" Value="SubmenuItem"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}"/>
                                    <Setter Property="Foreground" Value="#ffc8294b"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSubmenuOpen" Value="true"/>
                                        <Condition Property="Role" Value="TopLevelHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuSeparatorBorderBrush}"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                                </MultiTrigger>
                                <Trigger Property="IsSubmenuOpen" Value="true">
                                    <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{StaticResource BackgroundSelected}"/>
                                </Trigger>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MenuDisabledForeground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{StaticResource MenuSeparatorBorderBrush}" BorderThickness="1" Margin="25,0,0,0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!--Sliding Button Style-->

    <Style x:Key="btnLeftStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="0" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="180" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.CenterX)" >
                                            <SplineDoubleKeyFrame Value="5" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Image x:Name="imgNormal" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/btn_LeftFrame.png"  Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                        <Image x:Name="imgArrow"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/icon_arrow_red.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-10,0,0" >
                            <Image.RenderTransform>
                                <RotateTransform Angle="0" CenterX="2" CenterY="9.5" ></RotateTransform>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnRightStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="180" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.CenterX)" >
                                            <SplineDoubleKeyFrame Value="5" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="0" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Image x:Name="imgNormal" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/btn_RightFrame.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                        <Image x:Name="imgArrow"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/icon_arrow_red.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-10,0,0" >
                            <Image.RenderTransform>
                                <RotateTransform Angle="180" CenterX="2" CenterY="9.5" ></RotateTransform>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnLeftTopConerStyleVertical" TargetType="ToggleButton">
        <Setter Property="Width"  Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="0" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="180" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Image x:Name="imgArrow"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_subarea_height_up.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin ="0.5,0.5" >
                            <Image.RenderTransform>
                                <RotateTransform Angle="0" CenterX="0" CenterY="0" ></RotateTransform>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnLeftTopConerStyleHorizontal" TargetType="ToggleButton">
        <Setter Property="Width"  Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="180" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="0" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Image x:Name="imgArrow"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_subarea_width_left.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin ="0.5,0.5" >
                            <Image.RenderTransform>
                                <RotateTransform Angle="0" CenterX="0" CenterY="0" ></RotateTransform>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnLeftTwoTopConerStyleHorizontal" TargetType="ToggleButton">
        <Setter Property="Width"  Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="180" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="imgArrow" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" >
                                            <SplineDoubleKeyFrame Value="0" KeyTime="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Image x:Name="imgArrow"  Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/btn_subarea_width_right.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin ="0.5,0.5" >
                            <Image.RenderTransform>
                                <RotateTransform Angle="0" CenterX="0" CenterY="0" ></RotateTransform>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--C1DropDown Button Style-->

    <Style x:Key="C1DropDownButtonStyle" TargetType="{x:Type c1:C1DropDownButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFC4C4C4"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalHeaderAlignment" Value="Stretch"/>
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="MouseOverBrush" Value="#FFFFFFFF"/>
        <Setter Property="FocusBrush" Value="#FFD8D8D8"/>
        <Setter Property="PressedBrush" Value="#FFFFFFFF"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="8,0,8,0"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="MinWidth" Value="86"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DropDownOpenStates">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ArrowPolygon" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                      Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="Stretch" IsTabStop="True" Padding="0"  VerticalContentAlignment="Center" >
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ButtonBase}">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0,0,0,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="CheckStates">
                                                            <VisualState x:Name="Checked">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unchecked"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused"/>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Border x:Name="BackgroundElement" BorderBrush="#FF474747" BorderThickness="1"  >
                                                        <Border.Background>
                                                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                                <GradientStop Color="#FF555561" Offset="0.5"/>
                                                                <GradientStop Color="#FF474751" Offset="0"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Border x:Name="CheckedElement"   BorderThickness="1" Background="#FF8D1C35" BorderBrush="#FF720E24"  Visibility="Collapsed"/>
                                                    <Border x:Name="MouseOverElement" BorderThickness="1" Background="#FFC8294B" BorderBrush="#FFA6213E"  Visibility="Collapsed"/>
                                                    <Border x:Name="PressedElement"   BorderThickness="1" Background="#FF8D1C35" BorderBrush="#FF720E24"  Visibility="Collapsed"/>
                                                    <Border x:Name="DisabledElement"   BorderThickness="1" Background="#FFAAAAAA" BorderBrush="#FFCCCCCC"  Visibility="Collapsed"/>
                                                    <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"  />
                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}"  IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderPresenter" Content="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" Margin="{TemplateBinding HeaderPadding}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"/>
                                <Polygon x:Name="ArrowPolygon" Grid.Column="1" Fill="#FFFFFFFF" Margin="0,0,9,0" Points="0,0 9,0 4.5,6" VerticalAlignment="Center" />
                            </Grid>
                        </ToggleButton>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Popup x:Name="DropDownPopup" AllowsTransparency="True" VerticalAlignment="Bottom">
                            <Grid Height="{Binding DropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MaxWidth="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding MinDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"  Width="{Binding DropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" >
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="0,1,0,0"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--GridSplitter Style-->

    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid>
                        <!--<Button Content="⁞" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" FontSize="10"  FontWeight="Bold" Padding="-1,0,0,0"/>-->
                        <!--<Rectangle Fill="#00FFFFFF" />-->
                        <Image Grid.Column="0" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_i_subarea-w-control.png" Width="8" Height="50" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterVerticalStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid>
                        <!--<Button Content="⁞" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" FontSize="10"  FontWeight="Bold" Padding="-1,0,0,0"/>-->
                        <!--<Rectangle Fill="#00FFFFFF" />-->
                        <Image Grid.Column="0" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/bg_i_subarea-h-control.png" Width="50" Height="8" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Board Sub Title Style-->

    <Style TargetType="{x:Type Border}" x:Key="BorderSubTitleStyle">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF8A8A8A"/>
    </Style>

    <!--TreeView Style-->

    <Style TargetType="{x:Type TreeView}" x:Key="TreeViewBaseStyle">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FF575757"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Border BorderThickness="0" Padding="11,0,0,9" Background="{TemplateBinding Background}" Margin="0">
                                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
									Background="{x:Null}" BorderBrush="Transparent" BorderThickness="0" IsTabStop="False">
                                    <ItemsPresenter Margin="0"/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource TreeViewBaseStyle}"/>

    <Style TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemBaseStyle">
        <Setter Property="ctrlLib:TreeViewItemLine.ApplyStyle" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#FF575757"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Margin" Value="0,9,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="RootLayout" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF999999"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedHeader" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NoItemHeader" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedHeader" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="HasItems"/>
                                <VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NoItemHeader" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="(FrameworkElement.Margin)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness Left="-3" Top="0" Right="0" Bottom="0" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed">
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="(TextElement.FontWeight)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontWeight>Bold</FontWeight>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="13"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="17"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Rectangle x:Name="HorLn" Height="1" Width="12" Margin="-24,0,0,0" SnapsToDevicePixels="true"
                                   Visibility="{Binding Converter={StaticResource TreeLineVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_line_horizontal.png" Stretch="None" TileMode="Tile" Viewport="0,0,2,1" ViewportUnits="Absolute"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="VerLn" Width="1" Margin="-39,-15,0,0" Grid.RowSpan="2" SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_line_vertical.png" Stretch="None" TileMode="Tile"  Viewport="0,0,1,2" ViewportUnits="Absolute"/>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ToggleButton x:Name="Expander" Panel.ZIndex="1"
							IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsTabStop="False">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid x:Name="Root" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Unchecked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedImage" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <Image x:Name="CheckedImage" Visibility="Collapsed" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_icon_spread.png" Width="13" Height="13" Stretch="Fill"/>
                                            <Image x:Name="UncheckedImage" Visibility="Visible" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_icon_folded.png" Width="13" Height="13" Stretch="Fill"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Grid x:Name="headerGrid" Grid.Column="1" Margin="9,0,0,0" Height="13"  VerticalAlignment="Center">
                            <TextBlock x:Name="Header" Grid.Column="1" Padding="0,5" Height="29"
                                       Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                       Text="{TemplateBinding Header}" FontWeight="Normal" Visibility="Visible">
                            </TextBlock>
                            <TextBlock x:Name="SelectedHeader" Grid.Column="1" Padding="0,5" Height="29"
							    Background="{TemplateBinding Background}" Foreground="#FFD2003A"
							    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							    FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
							    Text="{TemplateBinding Header}" FontWeight="Bold" Visibility="Collapsed">
                            </TextBlock>
                        </Grid>
                        <!--<Button x:Name="NoItemHeader" Grid.Column="1" Padding="0" Margin="-3,0,0,0" Height="20" ClickMode="Hover"
							Background="{Binding Background}" Foreground="{TemplateBinding Foreground}"
							BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
							FontWeight="Normal" Visibility="Collapsed"
							IsTabStop="False">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="Pressed"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To=".55"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Button>-->

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TreeLineCheckLastItemConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="22"/>
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemBaseStyle}"/>

    <!--C1TreeView Style-->

    <Style x:Key="C1TreeViewStyle" TargetType="c1:C1TreeView">
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <!--<Setter Property="BorderBrush" Value="#FFA4AFBA"/>-->
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="SelectedBackground" Value="#FFA9DAF3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ScrollBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="Gainsboro"/>
                    <Setter Property="BorderBrush" Value="#FF707070"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="1E-05*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                        <c1:C1BrushBuilder.Style>
                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                <Setter Property="DesignBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                            <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                            <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                            </Style>
                                        </c1:C1BrushBuilder.Style>
                                    </c1:C1BrushBuilder>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition Width="1E-05*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.Style>
                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                        <Setter Property="DesignBrush">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                    <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                    <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                    </Style>
                                                </c1:C1BrushBuilder.Style>
                                            </c1:C1BrushBuilder>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TreeView}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="DropLine">
                            <Path Data="M5,4L26,4" Height="1" Stretch="Fill" Stroke="{TemplateBinding SelectedBackground}" StrokeThickness="1" VerticalAlignment="Center" Width="50"/>
                            <Path Data="M0,0L0,14 14,7z" Fill="{TemplateBinding SelectedBackground}" HorizontalAlignment="Left" Height="9" Margin="0,0,2,0" Stretch="Fill" Width="4"/>
                        </Grid>
                        <Grid x:Name="DropArrow">
                            <Path Data="M0,0L0,14 14,7z" Fill="{TemplateBinding SelectedBackground}" HorizontalAlignment="Right" Height="9" Margin="0,0,2,0" Stretch="Fill" Width="4"/>
                        </Grid>
                        <Border BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid>
                                <ScrollViewer x:Name="Scroll" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" c1:ClearStyleExtensions.ButtonForeground="{TemplateBinding Foreground}" c1:ClearStyleExtensions.ButtonBackground="#FFD1DCE8" Background="{TemplateBinding Background}" Foreground="Blue" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" Padding="{TemplateBinding Padding}" c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="Gainsboro"/>
                                            <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD"/>
                                            <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
                                            <Setter Property="Padding" Value="4"/>
                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2"/>
                                            <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black"/>
                                            <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                                <Setter.Value>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Background" Value="Gainsboro"/>
                                                        <Setter Property="BorderBrush" Value="#FF707070"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                        <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                                                        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                            <RowDefinition Height="1E-05*"/>
                                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                        </Grid.RowDefinitions>
                                                                        <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.Style>
                                                                                <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                    <Setter Property="DesignBrush">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                </Style>
                                                                            </c1:C1BrushBuilder.Style>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                                                        <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                        <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                                                        <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Grid x:Name="Root" Background="Transparent">
                                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                                            <VisualState x:Name="Normal"/>
                                                                                                            <VisualState x:Name="MouseOver">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                            <VisualState x:Name="Pressed">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                            <VisualState x:Name="Disabled">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                        </VisualStateGroup>
                                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                </Grid>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                            <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                        </RepeatButton>
                                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <Grid>
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                        </LinearGradientBrush>
                                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                                </c1:C1BrushBuilder>
                                                                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                            </Grid>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                        <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                                                            <RepeatButton.Style>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                <Grid x:Name="Root" Background="Transparent">
                                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                                            <VisualState x:Name="Normal"/>
                                                                                                            <VisualState x:Name="MouseOver">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                            <VisualState x:Name="Pressed">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                            <VisualState x:Name="Disabled">
                                                                                                                <Storyboard>
                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </VisualState>
                                                                                                        </VisualStateGroup>
                                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                            </LinearGradientBrush>
                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                    </c1:C1BrushBuilder>
                                                                                                    <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                </Grid>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                            <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                        </RepeatButton>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Foreground" Value="Black"/>
                                                                <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                                <Setter Property="Width" Value="Auto"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                    <ColumnDefinition Width="1E-05*"/>
                                                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                    <c1:C1BrushBuilder.Style>
                                                                                        <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                            <Setter Property="DesignBrush">
                                                                                                <Setter.Value>
                                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                        <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                                                                        <GradientStop Color="#FFEDEDED" Offset="0.2"/>
                                                                                                        <GradientStop Color="#FFEDEDED" Offset="0.8"/>
                                                                                                        <GradientStop Color="#FFE3E3E3" Offset="1"/>
                                                                                                    </LinearGradientBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                        </Style>
                                                                                    </c1:C1BrushBuilder.Style>
                                                                                </c1:C1BrushBuilder>
                                                                                <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Grid x:Name="Root" Background="Transparent">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                                </RepeatButton>
                                                                                <Track x:Name="PART_Track" Grid.Column="1">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <Grid>
                                                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                                                            <VisualState x:Name="Normal"/>
                                                                                                                            <VisualState x:Name="MouseOver">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </VisualState>
                                                                                                                            <VisualState x:Name="Pressed">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </VisualState>
                                                                                                                            <VisualState x:Name="Disabled">
                                                                                                                                <Storyboard>
                                                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                                                <Visibility>Visible</Visibility>
                                                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </VisualState>
                                                                                                                        </VisualStateGroup>
                                                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                                                    <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                    <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                                    <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                                    <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                                </LinearGradientBrush>
                                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                                        </c1:C1BrushBuilder>
                                                                                                                        <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                        <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                        <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                                    </Grid>
                                                                                                                </Grid>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Grid x:Name="Root" Background="Transparent">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Pressed">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                                </RepeatButton>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Vertical" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                                <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                                </Grid>
                                                                <ScrollBar x:Name="PART_VerticalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="1" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=verticalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Vertical" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="0" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="0" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=horizontalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Horizontal" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="1" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>
                                    <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                        <c1:ScrollViewerTouchBehavior/>
                                    </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="2" IsHitTestVisible="False" Opacity="0" Visibility="{TemplateBinding DisabledCuesVisibility}"/>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TreeView}" BasedOn="{StaticResource C1TreeViewStyle}"/>

    <Style x:Key="C1TreeViewItemStyle" TargetType="{x:Type c1:C1TreeViewItem}">
        <Setter Property="ctrlLib:C1TreeViewItemLine.ApplyStyle" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Setter Property="LineStroke" Value="Black"/>
        <Setter Property="LineThickness" Value="1"/>
        <Setter Property="LineDashArray" Value="1"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TreeViewItem}">
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandedStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildrenPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildrenPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShowLinesStates">
                                <VisualState x:Name="ShowLines">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanelBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideLines">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanelBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <!--<Visibility>Visible</Visibility>-->
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <!--<Visibility>Visible</Visibility>-->
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ItemLineStates">
                                <VisualState x:Name="ShowExclusiveItemLine">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExclusiveItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LastItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowRootItemLine">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExclusiveItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LastItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowLastItemLine">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExclusiveItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LastItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowNormalItemLine">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExclusiveItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LastItemLine">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LinePanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                        <c1:C1BrushBuilder x:Name="SelectedBackground" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding SelectedBackground}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDEF3FA" Offset="0"/>
                                    <GradientStop Color="#FFA8D4E3" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1FBFF" Offset="0"/>
                                    <GradientStop Color="#FFC5E3ED" Offset="1"/>
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Border x:Name="SelectedElement"  BorderThickness="0" Background="#FFFFD1D1"        CornerRadius="0" Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" BorderThickness="0" Background="#FFDCE9EF"     CornerRadius="0" Visibility="Collapsed"/>
                        <!--<Border x:Name="SelectedElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" Visibility="Collapsed"/>
                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding MouseOverBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="2" Visibility="Collapsed"/>-->
                        <Grid x:Name="HeaderPanelContainer" Background="Transparent" Margin="2,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="HeaderPanel" Background="Transparent" MinHeight="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="23"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="LineContainer" Margin="-2,0,0,0">
                                    <c1:C1TreeViewLine x:Name="RootItemLine"      Margin="-7,0,0,0"  Height="20" Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}" StrokeDashArray="{TemplateBinding LineDashArray}" Visibility="Collapsed" Width="0">
                                        <c1:C1TreeViewLine.Style>
                                            <Style TargetType="{x:Type c1:C1TreeViewLine}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type c1:C1TreeViewLine}">
                                                            <Path x:Name="Line" Data="M6.5,20L6.5,10.5 15,10.5" Height="20" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Width="15"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </c1:C1TreeViewLine.Style>
                                    </c1:C1TreeViewLine>
                                    <c1:C1TreeViewLine x:Name="ExclusiveItemLine" Margin="-8,0,0,0"  Height="20" Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}" StrokeDashArray="{TemplateBinding LineDashArray}" Visibility="Collapsed" Width="15">
                                        <c1:C1TreeViewLine.Style>
                                            <Style TargetType="{x:Type c1:C1TreeViewLine}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type c1:C1TreeViewLine}">
                                                            <Path x:Name="Line" Data="M6.5,10.5L15,10.5" Height="20" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Width="15"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </c1:C1TreeViewLine.Style>
                                    </c1:C1TreeViewLine>
                                    <c1:C1TreeViewLine x:Name="NormalItemLine"    Margin="-7,0,0,0"  Height="20" Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}" StrokeDashArray="{TemplateBinding LineDashArray}" Visibility="Collapsed" Width="15">
                                        <c1:C1TreeViewLine.Style>
                                            <Style TargetType="{x:Type c1:C1TreeViewLine}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type c1:C1TreeViewLine}">
                                                            <Path x:Name="Line" Data="M6.5,0L6.5,20 M6.5,10.5L15,10.5" Height="20" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Width="15"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </c1:C1TreeViewLine.Style>
                                    </c1:C1TreeViewLine>
                                    <c1:C1TreeViewLine x:Name="LastItemLine"      Margin="-7,0,0,0"  Height="20" Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}" StrokeDashArray="{TemplateBinding LineDashArray}" Visibility="Collapsed" Width="15">
                                        <c1:C1TreeViewLine.Style>
                                            <Style TargetType="{x:Type c1:C1TreeViewLine}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type c1:C1TreeViewLine}">
                                                            <Path x:Name="Line" Data="M6.5,0L6.5,10.5 15,10.5" Height="20" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Width="15"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </c1:C1TreeViewLine.Style>
                                    </c1:C1TreeViewLine>
                                </Grid>
                                <c1:C1TreeViewExpandButton x:Name="ExpandButton" BorderBrush="{TemplateBinding Foreground}" Background="{TemplateBinding Foreground}" IsTabStop="{TemplateBinding IsTabStop}" IsThreeState="False" Margin="0" VerticalAlignment="Center">
                                    <c1:C1TreeViewExpandButton.Template>
                                        <ControlTemplate TargetType="{x:Type c1:C1TreeViewExpandButton}">
                                            <Grid Background="Transparent" Cursor="Arrow">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver"/>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandedGrid">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedGrid">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandedGrid">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedGrid">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Indeterminate"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ShowIcons">
                                                        <VisualState x:Name="ShowTriangleIcon">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineExpandedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineCollapsedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="ShowPlusIcon">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineExpandedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LineCollapsedIcon">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused"/>
                                                        <VisualState x:Name="Focused"/>
                                                        <VisualState x:Name="ContentFocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <c1:C1BrushBuilder x:Name="ExpandedIconBrush" DesignBrush="#FF181818" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                <c1:C1BrushBuilder x:Name="CollapsedIconBrush" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                    <c1:C1BrushBuilder.DesignBrush>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FF9D9D9D" Offset="0.42"/>
                                                            <GradientStop Color="#FF818181" Offset="0.576"/>
                                                        </LinearGradientBrush>
                                                    </c1:C1BrushBuilder.DesignBrush>
                                                </c1:C1BrushBuilder>
                                                <c1:C1BrushBuilder x:Name="CollapsedIconBorderBrush" DesignBrush="#FF2B2B2B" DesignColor="Black" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                                                <Grid x:Name="ExpandedGrid">
                                                    <Image x:Name="ExpandedIcon" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_icon_spread.png" Width="13" Height="13" Stretch="Fill" Visibility="Collapsed" Margin="0,0,10,0"/>
                                                    <!--<Path x:Name="ExpandedIcon" Data="M5.9130435,0.086956523L5.9130435,5.9130435 0.086956523,5.9130435z" Fill="{Binding Output, ElementName=ExpandedIconBrush}" Height="6" Stroke="{TemplateBinding Background}" Width="6"/>-->
                                                    <Path x:Name="LineExpandedIcon" Data="M9.5,10.5L5.5,10.5 M3.5,6.5L11.5,6.5 11.5,14.5 3.5,14.5z" Fill="White" HorizontalAlignment="Left" Margin="-3,-5,0,0" Stroke="{TemplateBinding Background}" Visibility="Collapsed" VerticalAlignment="Top"/>
                                                </Grid>
                                                <Grid x:Name="CollapsedGrid">
                                                    <Image x:Name="CollapsedIcon" Source="/LGC.GMES.MES.ControlsLibrary;component/Images/LGC/tree_icon_folded.png" Width="13" Height="13" Stretch="Fill" Visibility="Visible"  Margin="0,0,10,0"/>

                                                    <!--<Path x:Name="CollapsedIcon" Data="M5.9130435,0.086956523L5.9130435,5.9130435 0.086956523,5.9130435z" Fill="{Binding Output, ElementName=CollapsedIconBrush}" Stroke="{Binding Output, ElementName=CollapsedIconBorderBrush}">
                                                        <Path.Style>
                                                            <Style TargetType="{x:Type Path}">
                                                                <Setter Property="Width" Value="6"/>
                                                                <Setter Property="Height" Value="6"/>
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <TransformGroup>
                                                                            <RotateTransform Angle="-45" CenterY="3" CenterX="3"/>
                                                                        </TransformGroup>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="StrokeThickness" Value="0.5"/>
                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                            </Style>
                                                        </Path.Style>
                                                    </Path>-->
                                                    <Path x:Name="LineCollapsedIcon" Data="M9.5,10.5L5.5,10.5 M7.5,8.5L7.5,12.5 M3.5,6.5L11.5,6.5 11.5,14.5 3.5,14.5z" Fill="White" HorizontalAlignment="Left" Margin="-3,-5,0,0" Stroke="{Binding Output, ElementName=CollapsedIconBorderBrush}" Visibility="Collapsed" VerticalAlignment="Top"/>
                                                </Grid>
                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" IsHitTestVisible="True"/>
                                                <Path x:Name="DisabledVisualElement" Data="M17.25,0.5L17.25,17.25 0.5,17.25z" Fill="#77E8E8E8" Opacity="0" Stretch="None" Stroke="#77E8E8E8">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}">
                                                            <Setter Property="Width" Value="6"/>
                                                            <Setter Property="Height" Value="6"/>
                                                            <Setter Property="StrokeThickness" Value="0.5"/>
                                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Grid>
                                        </ControlTemplate>
                                    </c1:C1TreeViewExpandButton.Template>
                                </c1:C1TreeViewExpandButton>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentControl.FocusVisualStyle>
                                        <Style/>
                                    </ContentControl.FocusVisualStyle>
                                </ContentControl>
                                <ContentControl x:Name="HeaderEditor" ContentTemplate="{TemplateBinding EditTemplate}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}" Padding="{TemplateBinding Padding}" Visibility="Collapsed" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentControl.FocusVisualStyle>
                                        <Style/>
                                    </ContentControl.FocusVisualStyle>
                                </ContentControl>
                            </Grid>
                            <Grid Background="Transparent" Grid.Column="1" HorizontalAlignment="Stretch"/>
                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" Grid.ColumnSpan="2" CornerRadius="2" IsHitTestVisible="False" Opacity="0"/>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="LinePanelBorder">
                                <c1:C1TreeViewLinePanel x:Name="LinePanel" LineStroke="{TemplateBinding LineStroke}" LineDashArray="{TemplateBinding LineDashArray}" LineThickness="{TemplateBinding LineThickness}">
                                    <c1:C1TreeViewLinePanel.LineStyle>
                                        <Style TargetType="{x:Type c1:C1TreeViewLine}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type c1:C1TreeViewLine}">
                                                        <Path x:Name="Line" Data="M6.5,0L6.5,100" Margin="2,0,0,0"  Height="100" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Width="15"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </c1:C1TreeViewLinePanel.LineStyle>
                                </c1:C1TreeViewLinePanel>
                            </Border>
                            <ItemsPresenter x:Name="ChildrenPanel" Grid.Column="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c1:C1TreeViewItem}" BasedOn="{StaticResource C1TreeViewItemStyle}"/>

    <!--C1TimeEditor Style-->

    <Style x:Key="C1TimeEditorStyle" TargetType="{x:Type c1:C1TimeEditor}">
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="SelectionBackground" Value="#FFADD6FF"/>
        <Setter Property="SelectionForeground" Value="#FF143D66"/>
        <Setter Property="ButtonBackground" Value="Gainsboro"/>
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="FocusBrush" Value="#FFA9DAF3"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="ButtonForeground" Value="Black"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="3,3"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Interval" Value="33"/>
        <Setter Property="Delay" Value="500"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TimeEditor}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                <VisualState x:Name="HideButtons">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IncreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DecreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowButtons">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition x:Name="ButtonsColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}"/>
                            <c1:C1MaskedTextBox x:Name="TextBox" BorderThickness="0" Background="Transparent" Culture="en-US" CaretBrush="{TemplateBinding CaretBrush}" Grid.Column="0" DisabledCuesVisibility="Collapsed" FocusCuesVisibility="Collapsed" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsEnabled="True" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" PromptChar="_" SelectOnFocus="Always" SelectionForeground="{TemplateBinding SelectionForeground}" SelectionBackground="{TemplateBinding SelectionBackground}" Text="" TextMaskFormat="IncludePrompt" Value="" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Grid.Column="1" Fill="{TemplateBinding BorderBrush}">
                                <Rectangle.Margin>
                                    <Binding ConverterParameter="top-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Rectangle.Margin>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Width" Value="1"/>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Grid Grid.Column="2">
                                <Grid.Margin>
                                    <Binding ConverterParameter="top-right-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Grid.Margin>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border x:Name="IncreaseBorder">
                                    <RepeatButton x:Name="Increase" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" Margin="0" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="topright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,1" Points="1,0 2,1 0,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                                <Border x:Name="DecreaseBorder" Margin="0" Grid.Row="1">
                                    <RepeatButton x:Name="Decrease" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="bottomright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,0" Points="0,0 2,0 1,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                            </Grid>
                            <Border x:Name="FocusedVisualElement" BorderBrush="{TemplateBinding FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="{TemplateBinding FocusCuesVisibility}"/>
                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="{TemplateBinding DisabledCuesVisibility}"/>
                        </Grid>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--C1NumericBox Style-->

    <Style x:Key="C1NumericBoxStyle" TargetType="{x:Type c1:C1NumericBox}">
        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="FocusBrush" Value="#FFC3C3C3"/>
        <Setter Property="ButtonBackground" Value="Gainsboro"/>
        <Setter Property="SelectionBackground" Value="#FFADD6FF"/>
        <Setter Property="SelectionForeground" Value="#FF143D66"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF4D4C4C"/>
        <Setter Property="ButtonForeground" Value="Black"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Interval" Value="33"/>
        <Setter Property="Delay" Value="500"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="3,3"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1NumericBox}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                <VisualState x:Name="HideButtons">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IncreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DecreaseBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowButtons">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition x:Name="ButtonsColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundElement"     Grid.ColumnSpan="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                            <Border x:Name="DisabledVisualElement" Grid.ColumnSpan="3" Background="#FFEBEBEB"                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="{TemplateBinding DisabledCuesVisibility}"/>
                            <c1:C1TextBoxBase x:Name="Text" BorderThickness="0" Background="Transparent" CaretBrush="{TemplateBinding CaretBrush}" DisabledCuesVisibility="Collapsed" FocusCuesVisibility="Collapsed" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="{TemplateBinding IsTabStop}" IsEnabled="True" Padding="{TemplateBinding Padding}" SelectionForeground="{TemplateBinding SelectionForeground}" SelectionBackground="{TemplateBinding SelectionBackground}" TextAlignment="{TemplateBinding TextAlignment}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Watermark="{TemplateBinding Watermark}">
                                <c1:C1TextBoxBase.Margin>
                                    <Binding ConverterParameter="left-top-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </c1:C1TextBoxBase.Margin>
                            </c1:C1TextBoxBase>
                            <Grid Grid.Column="2">
                                <Grid.Margin>
                                    <Binding ConverterParameter="top-right-bottom" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideThicknessConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Grid.Margin>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border x:Name="IncreaseBorder">
                                    <RepeatButton x:Name="Increase" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="topright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,1" Points="1,0 2,1 0,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                                <Border x:Name="DecreaseBorder" Margin="0,-1,0,0" Grid.Row="1">
                                    <RepeatButton x:Name="Decrease" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding ButtonBackground}" Delay="{TemplateBinding Delay}" IsTabStop="False" Interval="{TemplateBinding Interval}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Width="15">
                                        <c1:ClearStyleExtensions.CornerRadius>
                                            <Binding ConverterParameter="bottomright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </c1:ClearStyleExtensions.CornerRadius>
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Polygon Fill="{TemplateBinding ButtonForeground}" Height="5" Margin="0,0,1,0" Points="0,0 2,0 1,1" Stretch="Uniform" Width="5"/>
                                    </RepeatButton>
                                </Border>
                            </Grid>
                            <Border x:Name="FocusedVisualElement" BorderBrush="{TemplateBinding FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="{TemplateBinding FocusCuesVisibility}"/>
                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="3" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                        </Grid>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--c1:DataGridRowPresenter Style-->

    <Style x:Key="SummaryRowStyle" TargetType="{x:Type c1:DataGridRowPresenter}">
        <Setter Property="Height"  Value="25"/>
        <Setter Property="MinHeight"  Value="25"/>
        <Setter Property="Background"  Value="#FFF7E9D5"/>
        <Setter Property="Foreground"  Value="#FF333333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1:DataGridRowPresenter" >
                    <Border BorderBrush="Blue" BorderThickness="0">
                        <Grid x:Name="Root" Margin="{TemplateBinding CellsAreaMargin}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                    <VisualState x:Name="InvalidFocused" >
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}"/>
                            <c1:DataGridCellsPanel x:Name="Cells"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Sub Title Style-->

    <Style TargetType="{x:Type Button}" x:Key="Sub_Title_ButtonStyle" >
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="0"	BorderBrush="Transparent" Cursor="Hand">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <Image Source="Images/LGC/bg_value_left.png"    Grid.Column="0" Margin="0,0,-1,0"/>
                                <Image Source="Images/LGC/bg_value_center.png"  Grid.Column="1" Stretch="Fill" />
                                <Image Source="Images/LGC/bg_value_right.png"   Grid.Column="2" Margin="-1,0,0,0"/>

                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Margin="0,-1,0,0"
									              Content="{TemplateBinding Content}" TextBlock.Foreground="{TemplateBinding Foreground}"
									              ContentTemplate="{TemplateBinding ContentTemplate}"
									              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Sub_Title_LabelStyle">
        <Setter Property="FontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="#FFC8294B" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="TextBoxWaterMarkStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource SearchCondition_TextBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="3,0,0,0" VerticalAlignment="Center" />
                        <Label Margin="3,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontSize="8"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>