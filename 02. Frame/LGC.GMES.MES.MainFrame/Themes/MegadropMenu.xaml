<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LGC.GMES.MES.MainFrame"
                    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml">

    <Style TargetType="{x:Type local:MegadropMenu}">
        <Setter Property="Background" Value="#FFF7F7F7" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="ContentPadding" Value="50,0,0,17" />
        <Setter Property="DropPanelBorderThickness" Value="1,0,1,1" />
        <Setter Property="DropPanelBorderBrush" Value="#ff929291" />
        <Setter Property="HorizontalDropPanelAlignment" Value="Center" />
        <Setter Property="VerticalDropPanelAlignment" Value="Top" />
        <!--<Setter Property="DropPanelPadding" Value="199,19,0,18" />--> <!-- 2 단 메뉴 Hide-->
        <Setter Property="DropPanelPadding" Value="30,36,30,33" /> <!--2 단 메뉴 Hide-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MegadropMenu}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                        <Grid Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ItemsPresenter />
                        </Grid>
                        <Popup x:Name="megaDropBox" AllowsTransparency="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" PopupAnimation="Slide" Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.Column="1" x:Name="bdmegaDropBox" Padding="{TemplateBinding DropPanelPadding}" Background="{TemplateBinding Background}" >
                                    <ItemsControl ItemsSource="{Binding SelectedMenuItem.Items, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Border>
                                <Border Grid.Row="0" Grid.Column="0" Background="{TemplateBinding Background}"/>
                                <Border Grid.Row="0" Grid.Column="2" Background="{TemplateBinding Background}"/>
                                <Button x:Name="btnLeftNext"  Grid.Row="0" Grid.Column="0"  Style="{DynamicResource Content_MegaMenuPrevStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#FFF3F3F3" />
                                <Button x:Name="btnRightNext" Grid.Row="0" Grid.Column="2"  Style="{DynamicResource Content_MegaMenuNextStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#FFF3F3F3" />
                                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding DropPanelBorderBrush}" BorderThickness="{TemplateBinding DropPanelBorderThickness}"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"  />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MegadropMenuItem}" x:Key="MegadropMenuItemStyle">
        <!--<Setter Property="HeaderForeground" Value="#ffdfe0e2" />
        <Setter Property="HeaderSelectedForeground" Value="#ffef4d7d" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MegadropMenuItem}">
                    <Grid x:Name="LayoutRoot" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="#01ffffff">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tb" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tbMouseOver" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grdtb" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="tbSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="grdtb"> <!--2 단 메뉴 Hide-->
                        <!--<Grid x:Name="grdtb" Visibility="{TemplateBinding HeaderPanelVisibility}">--> <!--2 단 메뉴 Hide-->
                            <TextBlock x:Name="tb"          Text="{TemplateBinding Header}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" Foreground="{TemplateBinding HeaderForeground}"         FontWeight="{TemplateBinding HeaderFontWeight}"/>
                            <TextBlock x:Name="tbMouseOver" Text="{TemplateBinding Header}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" Foreground="{TemplateBinding HeaderSelectedForeground}" FontWeight="{TemplateBinding HeaderFontWeight}" Visibility="Collapsed" />
                        </Grid>
                        <TextBlock x:Name="tbSelected" Visibility="Collapsed" Text="{TemplateBinding Header}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" Foreground="{TemplateBinding HeaderSelectedForeground}" FontWeight="{TemplateBinding HeaderFontWeight}"/>
                        <!--<ItemsPresenter Grid.Row="1" Margin="0,0,0,0" Visibility="{TemplateBinding ItemsPanelVisibility}" />--> <!--2 단 메뉴 Hide-->
                        <ItemsPresenter Grid.Row="1" Margin="0,21,0,0" Visibility="{TemplateBinding ItemsPanelVisibility}" />  <!--2 단 메뉴 Hide-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MegadropMenuItem}" BasedOn="{StaticResource MegadropMenuItemStyle}" />
</ResourceDictionary>