<Window x:Class="LGC.GMES.MES.MainFrame.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LGC.GMES.MES.MainFrame"
        xmlns:mfCtrlLib="clr-namespace:LGC.GMES.MES.MainFrame.Controls"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="MES SFU" 
        Background="Blue" 
        AllowsTransparency="False" 
        WindowStyle="None" 
        SizeToContent="Manual" 
        ResizeMode="CanResize" 
        WindowState="Normal" 
        WindowStartupLocation="CenterScreen" 
        Height="768" 
        Width="1280" 
        SourceInitialized="Window_SourceInitialized" 
        FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" >
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                  CornerRadius="0"
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None" 
                                  ResizeBorderThickness="5"
                                  UseAeroCaptionButtons="true"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Grid x:Name="LayoutRoot">
        <Grid.Resources>
            <Style TargetType="{x:Type c1:C1TabControl}" x:Key="MainTabStyle">
                <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
                <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
                <Setter Property="TabStripBackground" Value="Gainsboro"/>
                <Setter Property="BorderBrush" Value="Gainsboro"/>
                <Setter Property="Background" Value="#fff9f9f9"/>
                <Setter Property="TabStripForeground" Value="Black"/>
                <Setter Property="SelectedBackground" Value="White"/>
                <Setter Property="TabStripOverlap" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="TabItemShape" Value="Rounded"/>
                <Setter Property="TabStripPlacement" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c1:C1TabControl}">
                            <Grid x:Name="Root">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Disabled">
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="TabStripPlacementStates">
                                        <VisualState x:Name="BottomTabStripPlacement">
                                        </VisualState>
                                        <VisualState x:Name="LeftTabStripPlacement">
                                        </VisualState>
                                        <VisualState x:Name="TopTabStripPlacement">
                                        </VisualState>
                                        <VisualState x:Name="RightTabStripPlacement">
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ShapeStates">
                                        <VisualState x:Name="Rectangle"/>
                                        <VisualState x:Name="Rounded"/>
                                        <VisualState x:Name="Sloped"/>
                                        <VisualState x:Name="Ribbon">
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <c1:C1LinePanel x:Name="LineOuter" Margin="{TemplateBinding Padding}" Orientation="Vertical" Reverse="True">
                                    <c1:C1LinePanel.LineDefinitions>
                                        <c1:LineDefinition Length="Auto"/>
                                        <c1:LineDefinition Length="*"/>
                                    </c1:C1LinePanel.LineDefinitions>
                                    <c1:C1LinePanel x:Name="LineTabItems" Orientation="Horizontal" Panel.ZIndex="100" FlowDirection="LeftToRight" Margin="10,0,0,3" HorizontalAlignment="Stretch" Height="27" Background="#FFDDDDDD">
                                        <c1:C1LinePanel.LineDefinitions>
                                            <c1:LineDefinition Length="Auto" />
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="*"/>
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="Auto"/>
                                            <c1:LineDefinition Length="Auto" />
                                        </c1:C1LinePanel.LineDefinitions>
                                        <Grid />
                                        <Border x:Name="LeftFilling" Height="8" Visibility="Collapsed" Width="8" Grid.Column="0"/>
                                        <RepeatButton x:Name="PreviousButton" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Previous}" Width="15">
                                            <RepeatButton.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </RepeatButton.RenderTransform>
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path Data="M5.3,1E-07L7,1E-07 4.7,2.5 7,5 5.3,5 3,2.5z M2.3,0L4,0 1.7,2.5 4,5 2.3,5 0,2.5z" Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Right" Height="5" Stretch="Uniform" Width="7"/>
                                        </RepeatButton>
                                        <ContentPresenter x:Name="TabPanelPresenter" Grid.Column="2" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" Margin="0" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}" FlowDirection="RightToLeft">
                                            <ContentPresenter.Content>
                                                <c1:C1TabPanel x:Name="TabPanel" HorizontalAlignment="{TemplateBinding TabStripHorizontalAlignment}" IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="{TemplateBinding TabStripVerticalAlignment}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>
                                        <RepeatButton x:Name="NextButton" Grid.Column="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding Next}" Width="15">
                                            <RepeatButton.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </RepeatButton.RenderTransform>
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path Data="M3,0L4.67,0 7,2.5 4.67,5 3,5 5.3,2.5z M0,0L1.67,0 4,2.5 1.67,5 0,5 2.3,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="5" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                        </RepeatButton>
                                        <c1:C1DropDownButton Grid.Column="4" x:Name="TabStripDropDown" AutoClose="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" IsTabStop="False" Margin="2" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Menu}" Visibility="{TemplateBinding TabStripMenuVisibility}" Width="15">
                                            <c1:C1DropDownButton.Header>
                                                <Grid Height="4" Margin="0,5,0,0" VerticalAlignment="Top" Width="7">
                                                    <Polygon Fill="{TemplateBinding TabStripForeground}" HorizontalAlignment="Center" Points="0,0 3.5,3.5 7,0" VerticalAlignment="Center"/>
                                                    <Rectangle Fill="{TemplateBinding TabStripForeground}" Height="1" Margin="0,-2,0,0" StrokeThickness="0" VerticalAlignment="Top"/>
                                                </Grid>
                                            </c1:C1DropDownButton.Header>
                                            <c1:C1DropDownButton.Style>
                                                <Style TargetType="{x:Type c1:C1DropDownButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                                                                <Grid>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                    </Grid.RowDefinitions>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="DropDownOpenStates">
                                                                            <VisualState x:Name="Closed"/>
                                                                            <VisualState x:Name="Opened"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="Disabled"/>
                                                                            <VisualState x:Name="MouseOver"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Unfocused"/>
                                                                            <VisualState x:Name="Focused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsTabStop="True" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" VerticalContentAlignment="{TemplateBinding VerticalHeaderAlignment}">
                                                                        <ToggleButton.Style>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Padding" Value="3"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                            <Grid>
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                                                        <VisualState x:Name="Checked">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Unchecked"/>
                                                                                                    </VisualStateGroup>
                                                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                                                        <VisualState x:Name="Focused">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Unfocused"/>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                </Border>
                                                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                </Border>
                                                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                </Border>
                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ToggleButton.Style>
                                                                        <ContentPresenter Content="{TemplateBinding Header}" Margin="{TemplateBinding HeaderPadding}"/>
                                                                    </ToggleButton>
                                                                    <Popup x:Name="DropDownPopup" Grid.Row="1">
                                                                        <Grid Height="{TemplateBinding DropDownHeight}" MaxWidth="{TemplateBinding MaxDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding MinDropDownWidth}" Width="{TemplateBinding DropDownWidth}">
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                                        </Grid>
                                                                    </Popup>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </c1:C1DropDownButton.Style>
                                            <c1:C1MenuList x:Name="Menu" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" Foreground="{TemplateBinding TabStripForeground}" HighlightedBackground="{TemplateBinding MouseOverBrush}" IsTabStop="True" FocusManager.IsFocusScope="True" OpenedBackground="{TemplateBinding PressedBrush}" Padding="0" KeyboardNavigation.TabNavigation="Once"/>
                                        </c1:C1DropDownButton>
                                        <Button x:Name="CloseButton" Grid.Column="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding TabStripBackground}" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" Height="15" Margin="2,2,4,2" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Grid.Row="5" ToolTip="{Binding CloseGlobal}" VerticalAlignment="Center" Width="15">
                                            <Button.Style>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Padding" Value="3"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal"/>
                                                                            <VisualState x:Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Disabled">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <Visibility>Visible</Visibility>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked"/>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unfocused"/>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    </Border>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Path Data="M0,0L1.6,0 3,1.56 4.4,0 6,0 3.8,2.5 6,5 4.4,5 3,3.49 1.59,5 -4.2E-09,5 2.18,2.5z" Fill="{TemplateBinding TabStripForeground}" Height="6" Stretch="Uniform" SnapsToDevicePixels="True" Width="7"/>
                                        </Button>
                                        <Border x:Name="RightFilling" Height="8" Visibility="Collapsed" Width="8" Grid.Column="6"/>
                                        <!--<Grid Width="640" />-->
                                        <!-- end of tab region -->
                                    </c1:C1LinePanel>
                                    <Grid>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="#fff9f9f9">
                                            <ContentPresenter x:Name="SelectedItemContent" ContentTemplate="{x:Null}"/>
                                        </Border>
                                        <Rectangle x:Name="DisabledVisualElement" Fill="#77E8E8E8" Visibility="Collapsed"/>
                                    </Grid>
                                </c1:C1LinePanel>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="80" />
            <RowDefinition Height="0" />
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
            <RowDefinition Height="32" />
        </Grid.RowDefinitions>
        <!--<Grid Grid.Row="4" Background="#ffcfcfcf" />-->
        <!-- Top -->
        <Grid x:Name="TopGrid" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Background="#FF474751">
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="84" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="120" />
            </Grid.ColumnDefinitions>
            <Image x:Name="imgLogoGMES" Grid.Row="0" Grid.RowSpan="1" Margin="10,9,0,6" Source="Images/LGC/img_logo_gmes.png"  VerticalAlignment="Center" HorizontalAlignment="Left"  />
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="0,9,18,0" Height="25">
                <TextBlock x:Name="txtbConfig" VerticalAlignment="Center" FontSize="12" Foreground="#ffe5e5e5" Visibility="Collapsed" ></TextBlock>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="84" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="120" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="grMenu" SizeChanged="grMenu_SizeChanged" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <Menu x:Name="munMainMenu" Grid.Row="0" Grid.Column="2" Style="{DynamicResource NormalMenu}" VerticalAlignment="Top" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" Background="#01ffffff" SizeChanged="munMainMenu_SizeChanged" />
                <Border x:Name="BorderBackground" Grid.Row="0" Grid.Column="0"  Background="#FF474751" BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                <Button x:Name="btnLeftNext" Grid.Row="0" Grid.Column="1" Style="{DynamicResource Content_MenuPrevStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#FF474751" Visibility="Collapsed" Click="btnLeftNext_Click" />
                <Button x:Name="btnRightNext" Grid.Row="0" Grid.Column="3" Style="{DynamicResource Content_MenuNextStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#FF474751" Visibility="Collapsed" Click="btnRightNext_Click" />
            </Grid>
            <Button x:Name="btnAllMenu"    Content="ALL MENU"  Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="25" Margin="0,0,10,0" 
                    Style="{DynamicResource Content_AllMenuStyle}" Click="btnAllMenu_Click"/>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,9,10,0" Height="25">
            <TextBlock x:Name="tblSystemIdea" Text="System Idea" VerticalAlignment="Center" FontSize="12" FontWeight="Bold" Foreground="#ffe5e5e5" Cursor="Hand" Margin="0,0,10,0" Visibility="Collapsed" MouseLeftButtonDown="tblSystemIdea_MouseLeftButtonDown"/>
            <TextBlock x:Name="tblTime" Text="1900-01-01 00:00:00 am" FontSize="12" Foreground="#ffe5e5e5" VerticalAlignment="Center" Margin="0,0,10,0"/>
            <!--사용자정보 & Setting-->
            <Grid Margin="0,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.ColumnSpan="3" Margin="18,-2,18,0">
                    <TextBlock x:Name="tblUserName" Text="" VerticalAlignment="Center" FontSize="12" FontWeight="Bold" Foreground="#ffd6bbc3" Margin="0,0,0,0" Padding="0,0,5,0" />
                    <TextBlock x:Name="tblLogout" Text="Logout" VerticalAlignment="Center" FontSize="12" Foreground="#ffbbbbc1" Cursor="Hand" MouseLeftButtonDown="tblLogout_MouseLeftButtonDown" Visibility="Collapsed"/>
                    <StackPanel x:Name="spHelp" Orientation="Horizontal" Visibility="Collapsed">
                        <Image Source="Images/LGC/GNB_devider_util.png" Width="1" Height="10" VerticalAlignment="Center" Margin="34,0,13,0" Visibility="Collapsed"  />
                        <TextBlock x:Name="tblHelp" Text="Help" VerticalAlignment="Center" FontSize="12" Foreground="#ffbbbbc1" Cursor="Hand" MouseLeftButtonDown="tblHelp_MouseLeftButtonDown" Visibility="Collapsed" />
                    </StackPanel>
                    <Image Source="Images/LGC/GNB_devider_util.png" Width="1" Height="10" VerticalAlignment="Center" Margin="13,0,13,0" />
                    <TextBlock x:Name="tblSetting" Text="Setting" VerticalAlignment="Center" FontSize="12" Foreground="#ffbbbbc1" Cursor="Hand" MouseLeftButtonDown="tblSetting_MouseLeftButtonDown"/>
                    <Image Source="Images/LGC/GNB_devider_util.png" Width="1" Height="10" VerticalAlignment="Center" Margin="13,0,13,0"  />
                    <TextBlock x:Name="tblCharger" Text="비상연락망" VerticalAlignment="Center" FontSize="12" Foreground="#ffbbbbc1" Cursor="Hand" MouseLeftButtonDown="tblCharger_MouseLeftButtonDown"/>
                </StackPanel>
            </Grid>
            <!--게시판-->
            <Grid x:Name="grdNotice" Width="30" Margin="0,0,8,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <Grid x:Name="grdNoticeBoard" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="15" MouseLeftButtonDown="grdUpdate_MouseLeftButtonDown">
                    <Image x:Name="imgNoticeBoard" Cursor="Hand" MouseLeftButtonDown="imgNoticeBoard_MouseLeftButtonDown">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Images/LGC/top_i_util_menu_list.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Images/LGC/top_i_util_menu_list_o.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </Grid>
            <!--즐겨찾기-->
            <Grid x:Name="grdFavorite" Width="30" Margin="0,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <c1:C1DropDown Grid.ColumnSpan="3" x:Name="ddFavorite" Background="Transparent" BorderBrush="Transparent" AutoClose="True" ShowButton="False" MouseLeftButtonDown="ddFavorite_MouseLeftButtonDown" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="0" Cursor="Hand">
                    <c1:C1DropDown.Style>
                        <Style TargetType="{x:Type c1:C1DropDown}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type c1:C1DropDown}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="DropDownOpenStates">
                                                    <VisualState x:Name="Closed"/>
                                                    <VisualState x:Name="Opened"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="Disabled"/>
                                                    <VisualState x:Name="MouseOver" />
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualState x:Name="Unfocused"/>
                                                    <VisualState x:Name="Focused">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <c1:C1BrushBuilder x:Name="HeaderBackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.DesignBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </c1:C1BrushBuilder.DesignBrush>
                                            </c1:C1BrushBuilder>
                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.DesignBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </c1:C1BrushBuilder.DesignBrush>
                                            </c1:C1BrushBuilder>
                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed"/>
                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=HeaderBackgroundBrush}" CornerRadius="{TemplateBinding CornerRadius}"/>
                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                                            <Grid Margin="{TemplateBinding BorderThickness}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{TemplateBinding Background}" Grid.Column="2" c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding HeaderForeground}" IsTabStop="{TemplateBinding IsTabStop}" IsEnabled="{TemplateBinding IsEnabled}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}">
                                                    <c1:ClearStyleExtensions.CornerRadius>
                                                        <Binding ConverterParameter="topright bottomright" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <c1:C1SideRadiusConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </c1:ClearStyleExtensions.CornerRadius>
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ButtonBase}">
                                                            <Setter Property="Padding" Value="3"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                        <Grid>
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal"/>
                                                                                    <VisualState x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Pressed">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                                <VisualStateGroup x:Name="CheckStates">
                                                                                    <VisualState x:Name="Checked">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Unchecked"/>
                                                                                </VisualStateGroup>
                                                                                <VisualStateGroup x:Name="FocusStates">
                                                                                    <VisualState x:Name="Focused">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Unfocused"/>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                        <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                        <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                        <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                        <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            </Border>
                                                                            <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            </Border>
                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            </Border>
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                    <Polygon x:Name="ArrowPolygon" Fill="{TemplateBinding Foreground}" Margin="4" Points="0,0 7,0 3.5,3.5"/>
                                                </ToggleButton>
                                                <ContentControl Foreground="{TemplateBinding HeaderForeground}" FontWeight="{TemplateBinding HeaderFontWeight}" FontStyle="{TemplateBinding HeaderFontStyle}" FontStretch="{TemplateBinding HeaderFontStretch}" FontSize="{TemplateBinding HeaderFontSize}" FontFamily="{TemplateBinding HeaderFontFamily}" HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" IsTabStop="False" Padding="{TemplateBinding HeaderPadding}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}">
                                                    <ContentControl.Template>
                                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                                            <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                        </ControlTemplate>
                                                    </ContentControl.Template>
                                                    <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}"/>
                                                </ContentControl>
                                            </Grid>
                                            <Border x:Name="FocusedVisualElement" BorderBrush="{TemplateBinding FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="{TemplateBinding FocusCuesVisibility}"/>
                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False" Opacity="0" Visibility="{TemplateBinding DisabledCuesVisibility}"/>
                                            <Popup x:Name="DropDownPopup" AllowsTransparency="True" VerticalAlignment="Bottom" >
                                                <Grid Height="{Binding DropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                          MaxWidth="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          MinWidth="{Binding MinDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          MinHeight="{Binding MinDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          Width="{Binding DropDownWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          Content="{TemplateBinding Content}" 
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                                          Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Grid>
                                            </Popup>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type c1:C1DropDownButton}">
                                    <Setter Property="Background" Value="Gainsboro"/>
                                    <Setter Property="HeaderBackground" Value="Gainsboro"/>
                                    <Setter Property="BorderBrush" Value="#FF707070"/>
                                    <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
                                    <Setter Property="FocusBrush" Value="#FFA9DAF3"/>
                                    <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="HeaderForeground" Value="Black"/>
                                    <Setter Property="CornerRadius" Value="2"/>
                                    <Setter Property="VerticalHeaderAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalHeaderAlignment" Value="Stretch"/>
                                    <Setter Property="HeaderPadding" Value="2"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="DropDownOpenStates">
                                                            <VisualState x:Name="Closed"/>
                                                            <VisualState x:Name="Opened"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="Disabled"/>
                                                            <VisualState x:Name="MouseOver"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Unfocused"/>
                                                            <VisualState x:Name="Focused"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="ValidationStates">
                                                            <VisualState x:Name="Valid"/>
                                                            <VisualState x:Name="InvalidUnfocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="InvalidFocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ToggleButton x:Name="ArrowToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}" c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding HeaderForeground}" FontWeight="{TemplateBinding HeaderFontWeight}" FontStyle="{TemplateBinding HeaderFontStyle}" FontSize="{TemplateBinding HeaderFontSize}" HorizontalContentAlignment="Stretch" IsTabStop="True" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" VerticalContentAlignment="Stretch">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                <Setter Property="Padding" Value="3"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                                        <VisualState x:Name="Checked">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Unchecked"/>
                                                                                    </VisualStateGroup>
                                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                                        <VisualState x:Name="Focused">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Unfocused"/>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                            <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                </c1:C1BrushBuilder>
                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                            <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                            <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                            <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                </c1:C1BrushBuilder>
                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                            <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                            <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                            <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                            <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                </c1:C1BrushBuilder>
                                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <ContentPresenter x:Name="contentPresenter" 
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                                                                      Content="{TemplateBinding Content}" 
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                                                      Margin="{TemplateBinding Padding}" 
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <Border x:Name="FocusVisualElement" 
                                                                                            BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" 
                                                                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" 
                                                                                            IsHitTestVisible="False" Opacity="0"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                        <Grid Margin="{TemplateBinding BorderThickness}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" Margin="{TemplateBinding HeaderPadding}" VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"/>
                                                            <Polygon x:Name="ArrowPolygon" Grid.Column="1" Fill="{TemplateBinding Foreground}" Margin="4" Points="0,0 7,0 3.5,3.5" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </ToggleButton>
                                                    <c1:C1ValidationDecorator x:Name="ValidationDecorator" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Popup x:Name="DropDownPopup" AllowsTransparency="True" VerticalAlignment="Bottom" >
                                                        <Grid Height="{Binding DropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MaxWidth="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  MinWidth="{Binding MinDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding DropDownWidth, RelativeSource={RelativeSource TemplatedParent}}"  Background="Red" >
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </Grid>
                                                    </Popup>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </c1:C1DropDown.Style>
                    <c1:C1DropDown.Header  >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="10"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Source="Images/LGC/icon_favorite.png" Width="16" Height="16" Cursor="Hand"/>
                        </Grid>
                    </c1:C1DropDown.Header>
                    <Grid Background="#FFF7F7F7" Margin="0,3,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Background="#FFF7F7F7" BorderThickness="1" BorderBrush="#FF929292"/>
                        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="16,9,16,23">
                            <ItemsControl x:Name="icSystemLink" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,14,0,0">
                                            <TextBlock Text="{Binding SYSTEMNAME}" FontSize="12" Foreground="#fff9f9f9" HorizontalAlignment="Left" Cursor="Hand" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl x:Name="icFavorite" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,14,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding MENUNAME}" FontSize="12" Foreground="#FF333333" HorizontalAlignment="Left" Cursor="Hand" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown_1"/>
                                            <Image Grid.Column="1" Margin="18,0,0,0" Cursor="Hand" Stretch="Uniform" Width="12" Height="12" Source="/LGC.GMES.MES.MainFrame;Component/Images/LGC/top_i_util_menu_favo_delete.png" MouseLeftButtonDown="Image_MouseLeftButtonDown"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>
                </c1:C1DropDown>
            </Grid>
            <!--업데이트-->
            <Grid Width="30" Margin="0,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <Grid x:Name="grdUpdate" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="15" MouseLeftButtonDown="grdUpdate_MouseLeftButtonDown">
                    <Grid.Resources>
                        <Storyboard x:Key="UpdateEnabledAnimation" RepeatBehavior="Forever">
                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetName="imgUpdate" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:01.8" Value="{x:Static Visibility.Collapsed}" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:02" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </Grid.Resources>
                    <Image Source="Images/LGC/icon_update_off.png" />
                    <Image x:Name="imgUpdate" Source="Images/LGC/icon_update_on.png" Visibility="Collapsed" Cursor="Hand" />
                </Grid>
            </Grid>
            <!--최소화버튼-->
            <Grid Width="30" Margin="0,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <Image Grid.ColumnSpan="3" Width="12" Height="12" Source="Images/LGC/icon_minimize.png" Cursor="Hand" MouseLeftButtonDown="Image_MouseLeftButtonDown_1"/>
            </Grid>
            <!--종료버튼-->
            <Grid Width="30">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="Images/LGC/GNB_util_bg_l.png" />
                <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                <Image Grid.ColumnSpan="4" Width="15" Height="15" Source="Images/LGC/icon_close.png" Cursor="Hand" MouseLeftButtonDown="Image_MouseLeftButtonDown_2"/>
            </Grid>
        </StackPanel>
        <Grid Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="90" Height="25" Margin="0,-40,18,10" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Source="Images/LGC/MDI_msg_bg_l.png" />
            <Image Source="Images/LGC/MDI_msg_bg_m.png"  Stretch="Fill" Grid.Column="1"/>
            <Image Source="Images/LGC/MDI_msg_bg_r.png"  Grid.Column="2"/>
            <TextBlock Grid.Column="1" x:Name="tblAllMenu" Text="ALL MENU" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12" Foreground="White" Cursor="Hand" MouseLeftButtonDown="tblAllMenu_MouseLeftButtonDown"/>
        </Grid>
        <local:MegadropMenu x:Name="mnMainMenu" Grid.Row="2" Grid.ColumnSpan="10" MenuItemClick="mnMainMenu_MenuItemClick" VerticalAlignment="Bottom" Visibility="Visible" >
            <local:MegadropMenu.Resources>
                <Style TargetType="Image">
                    <Setter Property="Margin" Value="23,0" />
                    <Setter Property="Width" Value="2" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Source" Value="Images/LGC/GNB_devider.png" />
                    <Setter Property="Stretch" Value="Fill" />
                </Style>
                <Style TargetType="{x:Type local:MegadropMenuItem}" x:Key="FirstMenuItem" BasedOn="{StaticResource MegadropMenuItemStyle}">
                    <Setter Property="HeaderFontSize" Value="30" />
                    <Setter Property="HeaderFontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#LG Smart_H SemiBold" />
                    <Setter Property="HeaderForeground" Value="#FF333333" />
                    <Setter Property="HeaderSelectedForeground" Value="#FF333333" />
                    <Setter Property="ItemsPanelVisibility" Value="Collapsed" />
                    <Setter Property="Visibility" Value="Visible" />
                </Style>
                <Style TargetType="{x:Type local:MegadropMenuItem}" x:Key="SecondMenuItem" BasedOn="{StaticResource MegadropMenuItemStyle}" >
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Margin" Value="0,0,50,0" />
                    <Setter Property="HeaderFontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" />
                    <Setter Property="HeaderFontSize" Value="14" />
                    <Setter Property="HeaderForeground" Value="#FF333333" />
                    <Setter Property="HeaderSelectedForeground" Value="#FF333333" />
                    <Setter Property="HeaderFontWeight" Value="Bold" />
                    <Setter Property="HeaderPanelVisibility" Value="Visible" />
                    <!--//2 단 메뉴 Hide-->
                    <!--<Setter Property="HeaderPanelVisibility" Value="Collapsed" />-->
                    <!--//2 단 메뉴 Hide-->
                </Style>
                <Style TargetType="{x:Type local:MegadropMenuItem}" x:Key="ThirdMenuItem" BasedOn="{StaticResource MegadropMenuItemStyle}">
                    <Setter Property="Margin" Value="0,0,0,12" />
                    <Setter Property="HeaderFontFamily" Value="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕" />
                    <Setter Property="HeaderFontSize" Value="12" />
                    <Setter Property="HeaderForeground" Value="#FF333333" />
                    <Setter Property="HeaderSelectedForeground" Value="#ffef4d7d" />
                    <Setter Property="ItemsPanelVisibility" Value="Collapsed" />
                </Style>
            </local:MegadropMenu.Resources>
        </local:MegadropMenu>
        <!-- Content -->
        <Grid Grid.Row="3" Background="#FFDDDDDD" x:Name="grdMain">
            <Grid x:Name="oldCode" IsHitTestVisible="False">
            </Grid>
            <c1:C1TabControl x:Name="tcMainContentTabControl" Padding="0" TabStripPlacement="Bottom" TabStripHorizontalAlignment="Left" 
                             TabItemShape="Rectangle" TabItemClose="InEachTab" MouseOverBrush="{x:Null}" PressedBrush="{x:Null}" SelectedBackground="White" 
                             TabStripBackground="#FFDDDDDD" Background="White" BorderThickness="0" Style="{DynamicResource MainTabStyle}" >
                <c1:C1TabControl.Resources>
                    <Style TargetType="{x:Type c1:C1TabItem}" x:Key="MainContentTabItemStyle">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="12" TextTrimming="CharacterEllipsis" Margin="0,-3,0,0"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="24" />
                        <!--<Setter Property="Width" Value="143" />-->
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type c1:C1TabItem}">
                                    <Grid Background="{x:Null}" FlowDirection="LeftToRight">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                                <VisualState x:Name="Disabled">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                                <VisualState x:Name="LeftTabStripPlacement">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <c1:Dock>Left</c1:Dock>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="TopTabStripPlacement">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <c1:Dock>Top</c1:Dock>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="RightTabStripPlacement">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <c1:Dock>Right</c1:Dock>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="BottomTabStripPlacement">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TabStripPlacement" Storyboard.TargetName="C1TabItemPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <c1:Dock>Bottom</c1:Dock>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="PinModeStates">
                                                <VisualState x:Name="Pinned">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>True</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>False</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unpinned">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>True</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UnpinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="UnpinButton">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>False</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected"/>
                                                <VisualState x:Name="Unselected"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <c1:C1TabItemPresenter x:Name="C1TabItemPresenter" Style="{DynamicResource MainContentTabItemPresenter}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="4" IsSelected="{TemplateBinding IsSelected}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" TabShape="{TemplateBinding TabShape}" Margin="-1,0,0,0">
                                            <c1:C1TabItemPresenter.BorderThickness>
                                                <Binding ConverterParameter="left-top-right" Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <c1:C1SideThicknessConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </c1:C1TabItemPresenter.BorderThickness>
                                            <Grid Margin="-8,0" Height="24">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Rectangle Grid.ColumnSpan="2" Fill="#01ffffff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Content}" Margin="9,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Margin="0" Orientation="Horizontal">
                                                    <StackPanel x:Name="StackPanelPinButtons" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="Collapsed">
                                                        <Button x:Name="UnpinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Pin}" VerticalAlignment="Center" Width="14">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Padding" Value="3"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                <Grid>
                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                            <VisualState x:Name="Normal"/>
                                                                                            <VisualState x:Name="MouseOver">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Pressed">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Disabled">
                                                                                                <Storyboard>
                                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                                            <VisualState x:Name="Checked">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unchecked"/>
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                                            <VisualState x:Name="Focused">
                                                                                                <Storyboard>
                                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unfocused"/>
                                                                                        </VisualStateGroup>
                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                            <Grid x:Name="AutoHideIcon" Height="14" Width="14">
                                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="0,0,1,1" HorizontalAlignment="Left" Height="4" Margin="7,0,0,1" VerticalAlignment="Bottom" Width="1"/>
                                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="1,1,0,0" HorizontalAlignment="Left" Height="7" Margin="5,2,0,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Width="5">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition/>
                                                                            <ColumnDefinition/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                                    </Grid>
                                                                </Border>
                                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="1" Margin="4,0,0,5" VerticalAlignment="Bottom" Width="7"/>
                                                            </Grid>
                                                        </Button>
                                                        <Button x:Name="PinButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="14" IsEnabled="False" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding UnPin}" Visibility="Collapsed" VerticalAlignment="Center" Width="14">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Padding" Value="3"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                <Grid>
                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                            <VisualState x:Name="Normal"/>
                                                                                            <VisualState x:Name="MouseOver">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Pressed">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Disabled">
                                                                                                <Storyboard>
                                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                                            <VisualState x:Name="Checked">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unchecked"/>
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                                            <VisualState x:Name="Focused">
                                                                                                <Storyboard>
                                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unfocused"/>
                                                                                        </VisualStateGroup>
                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                                                                <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                                                                                <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFE7F5FD" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCF0FC" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFA9D9F5" Offset="0"/>
                                                                                                <GradientStop Color="#FFC1E4F5" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA9DAF3" Offset="0.5"/>
                                                                                                <GradientStop Color="#FF91CDEB" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                    <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                        <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    </Border>
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                            <Grid x:Name="AutoHideIcon2" Height="14" Width="14">
                                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1,0,0,1" HorizontalAlignment="Left" Height="1" Margin="1,0,0,7" VerticalAlignment="Bottom" Width="4"/>
                                                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="0,1,1,0" HorizontalAlignment="Right" Height="5" Margin="0,0,1,5" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Width="7">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition/>
                                                                            <RowDefinition/>
                                                                        </Grid.RowDefinitions>
                                                                        <Border Background="{TemplateBinding Foreground}"/>
                                                                    </Grid>
                                                                </Border>
                                                                <Border Background="{TemplateBinding Foreground}" CornerRadius="1" HorizontalAlignment="Left" Height="7" Margin="5,0,0,4" VerticalAlignment="Bottom" Width="1"/>
                                                            </Grid>
                                                        </Button>
                                                    </StackPanel>
                                                    <Button x:Name="CloseButton" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" c1:ClearStyleExtensions.CornerRadius="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" Padding="0" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" ToolTip="{Binding Close}" VerticalAlignment="Center" Margin="10,0">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                <Setter Property="Padding" Value="3"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundElement"/>
                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                                        <VisualState x:Name="Checked">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Unchecked"/>
                                                                                    </VisualStateGroup>
                                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                                        <VisualState x:Name="Focused">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Unfocused"/>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <c1:C1BrushBuilder x:Name="CheckedBrush" DesignBrush="#FF8ED1E2" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed"/>
                                                                                <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush" DesignBrush="#FFFAFBFC" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed"/>
                                                                                <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <Border x:Name="CheckedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=CheckedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed">
                                                                                    <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                </Border>
                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <Border x:Name="FocusVisualElement" BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                        <Grid Height="11" Width="11" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{x:Null}">
                                                            <Image Source="Images/LGC/MDI_tab_close.png" />
                                                        </Grid>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </c1:C1TabItemPresenter>
                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" Visibility="Collapsed"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type c1:C1TabItemPresenter}" x:Key="MainContentTabItemPresenter">
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type c1:C1TabItemPresenter}">
                                    <Grid x:Name="Container" VerticalAlignment="Bottom">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Unselected"/>
                                                <VisualState x:Name="Selected">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                                <VisualState x:Name="TopTabStripPlacement">
                                                    <Storyboard/>
                                                </VisualState>
                                                <VisualState x:Name="BottomTabStripPlacement">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="Container">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="LeftTabStripPlacement">
                                                </VisualState>
                                                <VisualState x:Name="RightTabStripPlacement">
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <c1:C1LayoutTransformer x:Name="OuterTransformer" IsTabStop="False">
                                            <Grid x:Name="MiddleGrid" Margin="0">
                                                <Border x:Name="BackgroundElement" BorderBrush="#ffaaaaaa" BorderThickness="1" Background="#ffd6d6d6" />
                                                <Border x:Name="SelectedElement" BorderBrush="#ffaaaaaa" BorderThickness="1,0,1,1" Background="#fff5f5f5" Visibility="Collapsed"/>
                                                <c1:C1TabItemBorder CornerRadius="{TemplateBinding CornerRadius}" Shape="{TemplateBinding TabShape}">
                                                    <c1:C1LayoutTransformer x:Name="InnerTransformer" IsTabStop="False" Margin="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Border x:Name="ContentBorder">
                                                            <c1:C1LayoutRounder ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                        </Border>
                                                    </c1:C1LayoutTransformer>
                                                </c1:C1TabItemBorder>
                                            </Grid>
                                        </c1:C1LayoutTransformer>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </c1:C1TabControl.Resources>
            </c1:C1TabControl>
        </Grid>
        <!-- Bottom -->
        <Grid Grid.Row="4" Background="#6B6A70">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60*"/>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="18"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0" Grid.Column="0" Margin="10,4,0,3" VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>
                    <Image Source="Images/LGC/bg_bottom_message_left.png"   Stretch="Fill"  Grid.Column="0"/>
                    <Image Source="Images/LGC/bg_bottom_message_center.png" Stretch="Fill"  Grid.Column="1"/>
                    <Image Source="Images/LGC/bg_bottom_message_right.png"  Stretch="Fill"  Grid.Column="2"/>
                    <Grid Margin="16,0,12,0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="12" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <mfCtrlLib:FlowMessage x:Name="mainMessage" />
                        <ToggleButton Grid.Column="2" IsChecked="False" VerticalAlignment="Center" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Unchecked" Visibility="Collapsed">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                </VisualState>
                                                <VisualState x:Name="Pressed" />
                                                <VisualState x:Name="Disabled">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="imgClose" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="imgOpen" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" >
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="imgClose" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="imgOpen" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Image x:Name="imgClose" Source="Images/LGC/MDI_msg_arrow_close.png" Visibility="Collapsed" Stretch="None" VerticalAlignment="Center"/>
                                        <Image x:Name="imgOpen"  Source="Images/LGC/MDI_msg_arrow_open.png" Stretch="None" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </Grid>
                    <Popup x:Name="msgPopup" Grid.ColumnSpan="3" IsOpen="False" StaysOpen="False" Placement="Top" AllowsTransparency="True">
                        <Grid Width="604">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Source="Images/LGC/MDI_msg_layer_t.png" />
                            <Image Grid.Row="1" Source="Images/LGC/MDI_msg_layer_m.png" Stretch="Fill" />
                            <Image Grid.Row="2" Source="Images/LGC/MDI_msg_layer_b.png" />
                            <StackPanel x:Name="msgStackPanel" Orientation="Vertical" Grid.RowSpan="3" Margin="16,1,11,12"/>
                        </Grid>
                    </Popup>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="18"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="18"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="1" x:Name="tblVersion" Text="Ver. x.x.x.x" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12" Foreground="#fff3e9ec" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
                    <TextBlock Grid.Row="0" Grid.Column="3" x:Name="tblLine"    Text="" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="12" Foreground="#fff3e9ec" FontFamily="/LGC.GMES.MES.ControlsLibrary;Component/#맑은 고딕"/>
                    <Grid x:Name="grdPrint" Grid.Row="0" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Right" Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Image Source="Images/LGC/GNB_util_bg_l.png" />
                        <Image Source="Images/LGC/GNB_util_bg_m.png" Stretch="Fill" Grid.Column="1" />
                        <Image Source="Images/LGC/GNB_util_bg_r.png" Grid.Column="2"/>
                        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" VerticalAlignment="Center" Margin="12,0">
                            <Image x:Name="imgPrint" Source="Images/LGC/GNB_util_icon_printer.png" Width="10" Height="11" Cursor="Hand" MouseLeftButtonDown="imgPrint_MouseLeftButtonDown"/>
                            <TextBlock Text="{Binding Converter={StaticResource GlobalObjectDicConverter}, ConverterParameter='Printer'}" Margin="6,0,0,0" FontSize="9" Foreground="#ffbbbbc1" VerticalAlignment="Center"/>
                            <StackPanel x:Name="spPrinter" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Loaded="spPrinter_Loaded"/>
                            <Image Margin="10,0,0,0" Source="Images/LGC/GNB_util_icon__scanner.png" Width="10" Height="11" Visibility="Collapsed"/>
                            <TextBlock Text="{Binding Converter={StaticResource GlobalObjectDicConverter}, ConverterParameter='Scanner'}" Margin="6,0,0,0" FontSize="9" Foreground="#ffbbbbc1" Visibility="Collapsed"/>
                            <StackPanel x:Name="spPortCon" Orientation="Horizontal" Grid.Column="2" Loaded="spPortCon_Loaded" Visibility="Collapsed"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <!-- Canvas for C1Window -->
        <Canvas x:Name="cvCanvas" Grid.RowSpan="100" Grid.ColumnSpan="100" Background="Transparent" Visibility="Collapsed"/>
    </Grid>
</Window>